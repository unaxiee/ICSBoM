{"arch": "metapc", "ghash_internal": {"99712": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 5Ch", "mov     edi, [esp+6Ch+buf]", "mov     ebx, [esp+6Ch+result]", "mov     ecx, [esp+6Ch+nblocks]", "mov     edx, [esp+6Ch+c]", "mov     [esp+6Ch+buf_0], edi", "mov     [esp+6Ch+var_54], ebx", "mov     edi, large gs:14h", "mov     [esp+6Ch+var_20], edi", "xor     edi, edi", "test    nblocks_0, nblocks_0", "jz      loc_187D0"], "preds": [], "succs": [99774, 100304]}, "99774": {"disasm": ["lea     edi, [edx+0E4h]", "mov     edx, [ebx]", "lea     eax, (gcmR - 0DAE78h)[eax]", "mov     [esp+6Ch+var_4C], edi", "mov     [esp+6Ch+var_60], eax", "lea     eax, [esp+6Ch+var_23]", "lea     ebx, [esp+6Ch+var_30]", "mov     [esp+6Ch+var_40], eax", "lea     eax, [esp+6Ch+var_31]", "mov     [esp+6Ch+var_44], ebx", "mov     [esp+6Ch+var_48], eax", "mov     eax, edx", "xchg    ax, ax"], "preds": [99712], "succs": [99824]}, "99824": {"disasm": ["xor     edx, edx", "jmp     short loc_185FF"], "preds": [99774, 100222], "succs": [99839]}, "99832": {"disasm": ["mov     eax, [esp+6Ch+var_54]", "mov     eax, dword ptr ds:(_GLOBAL_OFFSET_TABLE_ - 0DAE78h)[eax+edx]"], "preds": [99839], "succs": [99839]}, "99839": {"disasm": ["mov     ebx, [esp+6Ch+buf_0]", "mov     esi, [esp+6Ch+var_44]", "xor     eax, [ebx+edx]", "mov     [esi+edx], eax", "add     edx, 4", "cmp     edx, 10h", "jnz     short loc_185F8"], "preds": [99824, 99832], "succs": [99832, 99861]}, "99861": {"disasm": ["movzx   edx, [esp+6Ch+var_21]", "mov     eax, [esp+6Ch+var_4C]", "mov     esi, [esp+6Ch+var_60]", "movzx   ecx, [esp+6Ch+var_22]", "mov     ebx, edx", "and     edx, 0F0h", "and     ebx, 0Fh", "add     edx, eax", "shl     ebx, 4", "add     ebx, eax", "mov     edi, [ebx+0Ch]", "mov     eax, edi", "shr     edi, 4", "shl     eax, 4", "movzx   eax, al", "movzx   ebp, word ptr [esi+eax*2]", "mov     eax, [ebx]", "mov     esi, [ebx+4]", "shl     ebp, 10h", "shr     eax, 4", "xor     eax, [edx]", "xor     ebp, eax", "mov     eax, esi", "shl     esi, 1Ch", "mov     [esp+6Ch+var_6C], ebp", "mov     ebp, [ebx]", "shr     eax, 4", "mov     ebx, [ebx+8]", "shl     ebp, 1Ch", "xor     ebp, eax", "xor     ebp, [edx+4]", "mov     eax, ebx", "shl     ebx, 1Ch", "shr     eax, 4", "xor     edi, ebx", "xor     esi, eax", "mov     eax, [esp+6Ch+var_40]", "xor     esi, [edx+8]", "mov     [esp+6Ch+var_68], ebp", "mov     ebp, [edx+0Ch]", "mov     [esp+6Ch+var_5C], eax", "mov     [esp+6Ch+var_64], esi", "xor     ebp, edi", "jmp     short loc_186AA"], "preds": [99839], "succs": [100010]}, "100000": {"disasm": ["movzx   ecx, byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 0DAE78h)[eax]", "sub     eax, 1", "mov     [esp+6Ch+var_5C], eax"], "preds": [100010], "succs": [100010]}, "100010": {"disasm": ["mov     edi, [esp+6Ch+var_4C]", "mov     eax, ecx", "and     ecx, 0F0h", "and     eax, 0Fh", "mov     edx, [esp+6Ch+var_68]", "shl     eax, 4", "add     eax, edi", "add     ecx, edi", "mov     edi, [esp+6Ch+var_6C]", "mov     esi, edx", "shr     esi, 8", "shl     edi, 18h", "xor     edi, esi", "mov     esi, edx", "mov     edx, [esp+6Ch+var_64]", "shl     esi, 18h", "xor     edi, [ecx+4]", "mov     ebx, edx", "shl     edx, 18h", "shr     ebx, 8", "xor     esi, ebx", "mov     ebx, edx", "mov     edx, ebp", "xor     esi, [ecx+8]", "shr     edx, 8", "xor     ebx, edx", "xor     ebx, [ecx+0Ch]", "mov     edx, [eax+0Ch]", "mov     [esp+6Ch+var_58], ebx", "mov     ebx, ebp", "movzx   ebp, bl", "mov     ebx, [esp+6Ch+var_60]", "movzx   ebp, word ptr [ebx+ebp*2]", "shl     ebp, 10h", "xor     ebp, [ecx]", "mov     ecx, [esp+6Ch+var_6C]", "shr     ecx, 8", "xor     ecx, ebp", "mov     ebp, dword ptr ds:(_GLOBAL_OFFSET_TABLE_ - 0DAE78h)[eax]", "shr     ebp, 4", "xor     ecx, ebp", "mov     ebp, edx", "shl     ebp, 4", "mov     ebx, ebp", "movzx   ebp, bl", "mov     ebx, [esp+6Ch+var_60]", "movzx   ebp, word ptr [ebx+ebp*2]", "mov     ebx, [esp+6Ch+var_58]", "shl     ebp, 10h", "xor     ecx, ebp", "mov     [esp+6Ch+var_6C], ecx", "mov     ecx, [eax+4]", "mov     ebp, ecx", "shr     ebp, 4", "xor     edi, ebp", "mov     ebp, dword ptr ds:(_GLOBAL_OFFSET_TABLE_ - 0DAE78h)[eax]", "mov     eax, [eax+8]", "shl     ebp, 1Ch", "xor     edi, ebp", "mov     [esp+6Ch+var_68], edi", "mov     edi, eax", "shr     edi, 4", "xor     esi, edi", "shl     ecx, 1Ch", "shl     eax, 1Ch", "shr     edx, 4", "xor     esi, ecx", "mov     ebp, eax", "xor     ebx, edx", "mov     eax, [esp+6Ch+var_5C]", "mov     [esp+6Ch+var_64], esi", "xor     ebp, ebx", "cmp     [esp+6Ch+var_48], eax", "jnz     loc_186A0"], "preds": [99861, 100000], "succs": [100000, 100222]}, "100222": {"disasm": ["mov     ecx, [esp+6Ch+var_54]", "bswap   ebp", "mov     eax, [esp+6Ch+var_6C]", "mov     edi, [esp+6Ch+var_68]", "mov     esi, [esp+6Ch+var_64]", "add     [esp+6Ch+buf_0], 10h", "mov     [ecx+0Ch], ebp", "sub     [esp+6Ch+nblocks], 1", "bswap   eax", "mov     [ecx], eax", "bswap   edi", "bswap   esi", "mov     [ecx+4], edi", "mov     [ecx+8], esi", "jnz     loc_185F0"], "preds": [100010], "succs": [99824, 100272]}, "100272": {"disasm": ["mov     eax, 60h ; '`'"], "preds": [100222], "succs": [100277]}, "100277": {"disasm": ["mov     ebx, [esp+6Ch+var_20]", "xor     ebx, large gs:14h", "jnz     short loc_187D4"], "preds": [100272, 100304], "succs": [100290, 100308]}, "100290": {"disasm": ["add     esp, 5Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [100277], "succs": []}, "100304": {"disasm": ["xor     eax, eax", "jmp     short loc_187B5"], "preds": [99712], "succs": [100277]}, "100308": {"disasm": ["call    __stack_chk_fail_local"], "preds": [100277], "succs": []}}, "_gcry_md_block_write": {"162688": {"disasm": ["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     esi, [esp+3Ch+hd]", "mov     ebp, [esp+3Ch+inbuf_arg]", "mov     edi, [esp+3Ch+inlen]", "mov     ecx, [hd_0+94h]", "cmp     blocksize_0, 80h", "ja      loc_27DD6"], "preds": [], "succs": [162736, 163286]}, "162736": {"disasm": ["mov     eax, [hd_0+98h]", "test    eax, eax", "jz      loc_27C6A"], "preds": [162688, 163264], "succs": [162750, 162922]}, "162750": {"disasm": ["cmp     [hd_0+90h], blocksize_0", "jz      loc_27D30"], "preds": [162736], "succs": [162762, 163120]}, "162762": {"disasm": ["test    ebp, ebp", "jz      loc_27C6A"], "preds": [162750, 163120], "succs": [162770, 162922]}, "162770": {"disasm": ["mov     edx, [hd_0+90h]", "test    edx, edx", "jz      short loc_27C21"], "preds": [162762], "succs": [162780, 162849]}, "162780": {"disasm": ["test    edi, edi", "jnz     short loc_27C05"], "preds": [162770], "succs": [162784, 162821]}, "162784": {"disasm": ["jmp     loc_27DC0"], "preds": [162780], "succs": [163264]}, "162792": {"disasm": ["add     edx, 1", "add     ebp, 1", "sub     edi, 1", "mov     [hd_0+90h], edx", "movzx   eax, byte ptr [inbuf-1]", "mov     [hd_0+edx-1], al", "jz      loc_27DC0"], "preds": [162821], "succs": [162821, 163264]}, "162821": {"disasm": ["cmp     edx, ecx", "jb      short loc_27BE8"], "preds": [162780, 162792], "succs": [162792, 162825]}, "162825": {"disasm": ["mov     [esp+3Ch+inblocks], ecx", "sub     esp, 4", "push    0; inlen", "push    0; inbuf_arg", "push    hd_0; context", "call    _gcry_md_block_write", "mov     ecx, [esp+4Ch+inblocks]", "add     esp, 10h"], "preds": [162821], "succs": [162849]}, "162849": {"disasm": ["xor     eax, eax", "cmp     edi, ecx", "jnb     short loc_27C78"], "preds": [162770, 162825], "succs": [162855, 162936]}, "162855": {"disasm": ["mov     [esp+3Ch+inblocks], ecx", "sub     esp, 0Ch", "push    stack_burn; bytes", "call    __gcry_burn_stack", "add     esp, 10h", "test    edi, edi", "jz      short loc_27C6A"], "preds": [162849, 163070, 163233], "succs": [162875, 162922]}, "162875": {"disasm": ["mov     eax, [hd_0+90h]", "mov     ecx, [esp+3Ch+inblocks]", "add     edi, eax", "sub     ebp, eax", "jmp     short loc_27C66"], "preds": [162855], "succs": [162918]}, "162896": {"disasm": ["add     eax, 1", "mov     [hd_0+90h], eax", "movzx   edx, byte ptr [ebp+eax-1]", "mov     [hd_0+eax-1], dl", "cmp     eax, edi", "jz      short loc_27C6A"], "preds": [162918], "succs": [162918, 162922]}, "162918": {"disasm": ["cmp     eax, ecx", "jb      short loc_27C50"], "preds": [162875, 162896], "succs": [162896, 162922]}, "162922": {"disasm": ["add     esp, 2Ch", "pop     ebx", "pop     hd_0", "pop     edi", "pop     ebp", "retn"], "preds": [162736, 162762, 162855, 162896, 162918, 163211], "succs": []}, "162936": {"disasm": ["mov     eax, edi", "xor     edx, edx", "mov     [esp+3Ch+var_20], ecx", "sub     esp, 4", "div     ecx", "mov     [esp+40h+inblocks], inblocks_0", "mov     edi, edx", "push    inblocks_0", "push    ebp", "push    hd_0", "call    dword ptr [hd_0+98h]", "mov     ecx, [esp+4Ch+inblocks]", "mov     dword ptr [hd_0+90h], 0", "mov     edx, ecx", "xor     ecx, ecx", "mov     [esp+4Ch+var_28], ecx", "movd    xmm0, edx", "movd    xmm1, [esp+4Ch+var_28]", "mov     [esp+4Ch+var_2C], edx", "add     esp, 10h", "mov     ecx, [esp+3Ch+inblocks]", "punpckldq xmm0, xmm1", "movq    xmm1, qword ptr [hd_0+80h]", "paddq   xmm0, xmm1", "movdqa  xmm1, xmm0", "movd    [esp+3Ch+var_24], xmm0", "cmp     [esp+3Ch+var_24], ecx", "psrlq   xmm1, 20h ; ' '", "movd    edx, xmm1", "movdqa  xmm1, ds:(xmmword_8C020 - 0DAE78h)[ebx]", "mov     ecx, edx", "sbb     ecx, [esp+3Ch+var_28]", "mov     ecx, [esp+3Ch+var_20]", "jnb     loc_27DB0"], "preds": [162849, 163243], "succs": [163070, 163248]}, "163070": {"disasm": ["mov     edx, [esp+3Ch+inblocks]", "movq    qword ptr [hd_0+80h], xmm0", "movq    xmm2, qword ptr [hd_0+88h]", "paddq   xmm1, xmm2", "imul    edx, ecx", "movq    qword ptr [hd_0+88h], xmm1", "add     ebp, edx", "jmp     loc_27C27"], "preds": [162936, 163248], "succs": [162855]}, "163120": {"disasm": ["mov     [esp+3Ch+inblocks], blocksize_0", "sub     esp, 4", "push    1", "push    hd_0", "push    hd_0", "call    eax", "mov     [esp+4Ch+bytes], stack_burn; bytes", "call    __gcry_burn_stack", "movq    xmm1, qword ptr [hd_0+80h]", "add     esp, 10h", "mov     dword ptr [hd_0+90h], 0", "movdqa  xmm0, ds:(xmmword_8C020 - 0DAE78h)[ebx]", "mov     ecx, [esp+3Ch+inblocks]", "paddq   xmm1, xmm0", "movdqa  xmm0, xmm1", "movd    edx, xmm1", "movq    qword ptr [hd_0+80h], xmm1", "psrlq   xmm0, 20h ; ' '", "movd    eax, xmm0", "or      eax, edx", "jnz     loc_27BCA"], "preds": [162750], "succs": [162762, 163211]}, "163211": {"disasm": ["add     dword ptr [hd_0+88h], 1", "adc     dword ptr [hd_0+8Ch], 0", "test    ebp, ebp", "jz      loc_27C6A"], "preds": [163120], "succs": [162922, 163233]}, "163233": {"disasm": ["xor     eax, eax", "cmp     edi, ecx", "jb      loc_27C27"], "preds": [163211], "succs": [162855, 163243]}, "163243": {"disasm": ["jmp     loc_27C78"], "preds": [163233], "succs": [162936]}, "163248": {"disasm": ["pxor    xmm1, xmm1", "jmp     loc_27CFE"], "preds": [162936], "succs": [163070]}, "163264": {"disasm": ["mov     ecx, [hd_0+94h]", "xor     ebp, ebp", "xor     edi, edi", "cmp     blocksize_0, 80h", "jbe     loc_27BB0"], "preds": [162784, 162792], "succs": [162736, 163286]}, "163286": {"disasm": ["push    eax", "lea     eax, (__FUNCTION___7363 - 0DAE78h)[ebx]; \"_gcry_md_block_write\"", "push    eax; func", "lea     eax, (aHashCommonC - 0DAE78h)[ebx]; \"hash-common.c\"", "push    80h; line", "push    eax; file", "call    _gcry_bug"], "preds": [162688, 163264], "succs": []}}, "prefetch_enc": {"196704": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, 400h", "lea     eax, (encT - 0DAE78h)[eax]", "jmp     short prefetch_table"], "preds": [], "succs": [196608]}}, "prefetch_dec": {"196736": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, 500h", "lea     eax, (dec_tables.T - 0DAE78h)[eax]", "jmp     prefetch_table"], "preds": [], "succs": [196608]}}, "do_encrypt_0": {"196768": {"disasm": ["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 24h", "mov     eax, [esp+34h+ax_0]", "mov     edx, [esp+34h+ctx]", "mov     esi, [esp+34h+ctx]", "mov     [esp+34h+var_28], ebp", "mov     ebx, [esp+34h+ctx]", "mov     ecx, [eax]", "xor     ecx, [edx]", "mov     edx, [eax+4]", "xor     edx, [esi+4]", "mov     ebx, [ebx+1E0h]", "mov     esi, [eax+8]", "mov     [esp+34h+var_24], edx", "mov     edx, [esp+34h+ctx]", "mov     [esp+34h+var_20], ebx", "mov     ebx, [eax+0Ch]", "xor     esi, [edx+8]", "xor     ebx, [edx+0Ch]", "mov     eax, esi", "movzx   edi, al", "lea     eax, (encT - 0DAE78h)[ebp]", "mov     edi, [eax+edi*4]", "xor     edi, [edx+18h]", "mov     edx, [esp+34h+var_24]", "mov     ebp, edi", "shr     edx, 18h", "mov     edi, [eax+edx*4]", "ror     edi, 8", "xor     edi, ebp", "mov     ebp, ecx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+ctx]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     edi, ebp", "movzx   ebp, bh", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     edi, ebp", "mov     [esp+34h+var_30], edi", "movzx   edi, byte ptr [esp+34h+var_24]", "mov     edi, [eax+edi*4]", "xor     edi, [edx+14h]", "mov     edx, esi", "mov     ebp, edi", "mov     edi, ecx", "shr     edi, 18h", "mov     edi, [eax+edi*4]", "ror     edi, 8", "xor     edi, ebp", "movzx   ebp, dh", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     edi, ebp", "mov     ebp, ebx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+ctx]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     edi, ebp", "mov     [esp+34h+var_2C], edi", "movzx   edi, cl", "movzx   ecx, ch", "mov     edi, [eax+edi*4]", "xor     edi, [edx+10h]", "mov     edx, [esp+34h+var_24]", "mov     ebp, edi", "mov     edi, ebx", "movzx   ebx, bl", "shr     edi, 18h", "mov     ebx, [eax+ebx*4]", "mov     edi, [eax+edi*4]", "ror     edi, 8", "xor     edi, ebp", "movzx   ebp, dh", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     edi, ebp", "mov     ebp, esi", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+ctx]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     edi, ebp", "shr     esi, 18h", "xor     ebx, [edx+1Ch]", "mov     esi, [eax+esi*4]", "mov     [esp+34h+var_34], edi", "mov     edx, [esp+34h+var_24]", "ror     esi, 8", "xor     ebx, esi", "mov     esi, [eax+ecx*4]", "shr     edx, 10h", "movzx   edx, dl", "mov     edx, [eax+edx*4]", "rol     esi, 8", "xor     esi, ebx", "mov     ebx, [esp+34h+var_20]", "rol     edx, 10h", "xor     esi, edx", "cmp     ebx, 2", "jle     loc_30590"], "preds": [], "succs": [197108, 198032]}, "197108": {"disasm": ["mov     ecx, [esp+34h+ctx]", "sub     ebx, 3", "mov     edx, ebx", "shr     edx, 1", "mov     [esp+34h+var_14], edx", "shl     edx, 5", "lea     ebx, [ecx+edx+40h]", "mov     [esp+34h+var_18], ebx", "lea     edi, [ecx+20h]", "mov     ebx, esi", "lea     esi, [esi+0]", "nop"], "preds": [196768], "succs": [197144]}, "197144": {"disasm": ["movzx   edx, byte ptr [esp+34h+var_30]", "mov     ebp, [esp+34h+var_2C]", "mov     esi, [esp+34h+var_34]", "mov     edx, [eax+edx*4]", "xor     edx, [edi+8]", "mov     ecx, edx", "mov     edx, ebp", "shr     edx, 18h", "mov     edx, [eax+edx*4]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, esi", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, bh", "mov     ecx, [eax+ecx*4]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, ebp", "mov     [esp+34h+var_1C], edx", "movzx   edx, cl", "mov     ecx, [edi+4]", "mov     edx, [eax+edx*4]", "xor     ecx, edx", "mov     edx, esi", "shr     edx, 18h", "mov     edx, [eax+edx*4]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, [esp+34h+var_30]", "movzx   ecx, ch", "mov     ecx, [eax+ecx*4]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, ebx", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, byte ptr [esp+34h+var_34]", "mov     [esp+34h+var_24], edx", "mov     edx, ebp", "mov     ecx, [eax+ecx*4]", "xor     ecx, [edi]", "mov     esi, ecx", "mov     ecx, ebx", "movzx   ebx, bl", "shr     ecx, 18h", "mov     ebp, [eax+ebx*4]", "mov     ecx, [eax+ecx*4]", "xor     ebp, [edi+0Ch]", "ror     ecx, 8", "xor     ecx, esi", "movzx   esi, dh", "mov     esi, [eax+esi*4]", "rol     esi, 8", "xor     ecx, esi", "mov     esi, [esp+34h+var_30]", "shr     esi, 10h", "mov     edx, esi", "movzx   esi, dl", "mov     edx, [esp+34h+var_34]", "mov     esi, [eax+esi*4]", "rol     esi, 10h", "xor     ecx, esi", "mov     esi, [esp+34h+var_30]", "shr     esi, 18h", "mov     ebx, [eax+esi*4]", "movzx   esi, dh", "ror     ebx, 8", "xor     ebx, ebp", "mov     ebp, [eax+esi*4]", "rol     ebp, 8", "xor     ebx, ebp", "mov     ebp, [esp+34h+var_2C]", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     esi, [eax+ebp*4]", "rol     esi, 10h", "xor     ebx, esi", "mov     [esp+34h+var_20], ebx", "mov     ebx, [esp+34h+var_1C]", "movzx   esi, bl", "mov     esi, [eax+esi*4]", "xor     esi, [edi+18h]", "mov     ebp, esi", "mov     esi, [esp+34h+var_24]", "shr     esi, 18h", "mov     esi, [eax+esi*4]", "ror     esi, 8", "xor     esi, ebp", "mov     ebp, ecx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+var_20]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     esi, ebp", "movzx   ebp, dh", "mov     edx, ebx", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     esi, ebp", "mov     [esp+34h+var_30], esi", "movzx   esi, byte ptr [esp+34h+var_24]", "mov     esi, [eax+esi*4]", "xor     esi, [edi+14h]", "mov     ebp, esi", "mov     esi, ecx", "shr     esi, 18h", "mov     esi, [eax+esi*4]", "ror     esi, 8", "xor     esi, ebp", "movzx   ebp, bh", "mov     ebx, [esp+34h+var_20]", "mov     ebp, [eax+ebp*4]", "shr     ebx, 10h", "rol     ebp, 8", "xor     esi, ebp", "movzx   ebp, bl", "mov     ebx, [esp+34h+var_20]", "mov     ebp, [eax+ebp*4]", "shr     ebx, 18h", "rol     ebp, 10h", "xor     esi, ebp", "mov     [esp+34h+var_2C], esi", "movzx   esi, cl", "movzx   ecx, ch", "mov     esi, [eax+esi*4]", "xor     esi, [edi+10h]", "mov     ebp, esi", "mov     esi, [eax+ebx*4]", "mov     ebx, [esp+34h+var_24]", "ror     esi, 8", "xor     esi, ebp", "movzx   ebp, bh", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     esi, ebp", "mov     ebp, edx", "shr     ebp, 10h", "mov     ebx, ebp", "movzx   ebp, bl", "movzx   ebx, byte ptr [esp+34h+var_20]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     esi, ebp", "mov     [esp+34h+var_34], esi", "mov     esi, [eax+ebx*4]", "xor     esi, [edi+1Ch]", "shr     edx, 18h", "add     edi, 20h ; ' '", "mov     ebx, [eax+edx*4]", "mov     edx, [esp+34h+var_24]", "ror     ebx, 8", "shr     edx, 10h", "xor     esi, ebx", "mov     ebx, [eax+ecx*4]", "movzx   edx, dl", "mov     edx, [eax+edx*4]", "rol     ebx, 8", "xor     ebx, esi", "rol     edx, 10h", "xor     ebx, edx", "cmp     [esp+34h+var_18], edi", "jnz     loc_30218"], "preds": [197108, 197144], "succs": [197642, 197144]}, "197642": {"disasm": ["mov     eax, [esp+34h+var_14]", "mov     esi, ebx", "lea     edx, [eax+eax+4]"], "preds": [197144], "succs": [197652]}, "197652": {"disasm": ["mov     edi, [esp+34h+var_28]", "shl     edx, 4", "movzx   eax, byte ptr [esp+34h+var_30]", "mov     ecx, [esp+34h+var_2C]", "add     edx, [esp+34h+ctx]", "mov     ebx, [esp+34h+var_34]", "movzx   ebp, byte ptr [edi+eax*4-48937h]", "mov     eax, ecx", "shr     eax, 18h", "xor     ebp, [edx+8]", "movzx   eax, byte ptr [edi+eax*4-48937h]", "shl     eax, 18h", "xor     ebp, eax", "mov     eax, ebx", "shr     eax, 0Eh", "and     eax, 3FCh", "movzx   eax, byte ptr [eax+edi-48937h]", "shl     eax, 10h", "xor     ebp, eax", "mov     eax, esi", "movzx   eax, ah", "movzx   eax, byte ptr [edi+eax*4-48937h]", "shl     eax, 8", "xor     ebp, eax", "movzx   eax, byte ptr [esp+34h+var_2C]", "movzx   eax, byte ptr [edi+eax*4-48937h]", "xor     eax, [edx+4]", "mov     ecx, eax", "mov     eax, ebx", "mov     ebx, [esp+34h+var_30]", "shr     eax, 18h", "movzx   eax, byte ptr [edi+eax*4-48937h]", "shl     eax, 18h", "xor     eax, ecx", "movzx   ecx, bh", "movzx   ecx, byte ptr [edi+ecx*4-48937h]", "shl     ecx, 8", "xor     eax, ecx", "mov     ecx, esi", "shr     ecx, 0Eh", "and     ecx, 3FCh", "movzx   ecx, byte ptr [ecx+edi-48937h]", "shl     ecx, 10h", "xor     eax, ecx", "mov     ecx, esi", "movzx   ecx, cl", "movzx   ecx, byte ptr [edi+ecx*4-48937h]", "xor     ecx, [edx+0Ch]", "mov     ebx, ecx", "mov     ecx, [esp+34h+var_30]", "shr     ecx, 18h", "movzx   ecx, byte ptr [edi+ecx*4-48937h]", "shl     ecx, 18h", "xor     ecx, ebx", "mov     ebx, [esp+34h+var_34]", "movzx   ebx, bh", "movzx   ebx, byte ptr [edi+ebx*4-48937h]", "shl     ebx, 8", "xor     ecx, ebx", "mov     ebx, [esp+34h+var_2C]", "shr     ebx, 0Eh", "and     ebx, 3FCh", "movzx   ebx, byte ptr [ebx+edi-48937h]", "movzx   edi, byte ptr [esp+34h+var_34]", "shl     ebx, 10h", "xor     ecx, ebx", "mov     ebx, [esp+34h+var_28]", "movzx   ebx, byte ptr [ebx+edi*4-48937h]", "mov     edi, [esp+34h+var_28]", "xor     ebx, [edx]", "shr     esi, 18h", "movzx   edx, byte ptr [edi+esi*4-48937h]", "shl     edx, 18h", "xor     ebx, edx", "mov     edx, [esp+34h+var_2C]", "mov     esi, [esp+34h+var_28]", "movzx   edi, dh", "movzx   edx, byte ptr [esi+edi*4-48937h]", "mov     edi, [esp+34h+var_30]", "shl     edx, 8", "shr     edi, 0Eh", "xor     ebx, edx", "and     edi, 3FCh", "movzx   edx, byte ptr [edi+esi-48937h]", "shl     edx, 10h", "xor     ebx, edx", "mov     edx, [esp+34h+bx_0]", "mov     [edx+4], eax", "mov     eax, 40h ; '@'", "mov     [edx], ebx", "mov     [edx+8], ebp", "mov     [edx+0Ch], ecx", "add     esp, 24h", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [197642, 198032], "succs": []}, "198032": {"disasm": ["mov     edx, 2", "jmp     loc_30414"], "preds": [196768], "succs": [197652]}}, "do_decrypt": {"198112": {"disasm": ["call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 18h", "mov     eax, [esp+28h+ctx]", "mov     ebx, [esp+28h+ax_0]", "mov     edi, [esp+28h+ctx]", "mov     eax, [eax+1E0h]", "mov     ebp, [ebx]", "mov     esi, [ebx+0Ch]", "mov     ecx, eax", "shl     ecx, 4", "xor     ebp, [ecx+edi+0F0h]", "mov     ecx, eax", "shl     ecx, 4", "add     ecx, edi", "mov     edi, [ebx+4]", "xor     edi, [ecx+0F4h]", "xor     esi, [ecx+0FCh]", "mov     [esp+28h+var_28], ebp", "mov     [esp+28h+var_20], edi", "mov     edi, [ebx+8]", "xor     edi, [ecx+0F8h]", "cmp     eax, 2", "mov     [esp+28h+var_24], edi", "jle     loc_30AE0"], "preds": [], "succs": [198216, 199392]}, "198216": {"disasm": ["mov     ebx, [esp+28h+ctx]", "lea     ecx, [eax+0Dh]", "sub     eax, 3", "mov     edi, [esp+28h+ctx]", "shl     ecx, 4", "shr     eax, 1", "shl     eax, 5", "add     edi, ecx", "lea     ecx, [ebx+ecx-20h]", "mov     ebx, esi", "sub     ecx, eax", "mov     [esp+28h+var_14], ecx", "lea     eax, (dec_tables.T - 0DAE78h)[edx]", "lea     esi, [esi+0]"], "preds": [198112], "succs": [198264]}, "198264": {"disasm": ["movzx   edx, byte ptr [esp+28h+var_28]", "mov     ebp, [esp+28h+var_20]", "mov     esi, [esp+28h+var_24]", "mov     edx, [eax+edx*4]", "xor     edx, [edi+10h]", "mov     ecx, edx", "mov     edx, ebp", "shr     edx, 18h", "mov     edx, [eax+edx*4]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, esi", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, bh", "mov     ecx, [eax+ecx*4]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, [edi+14h]", "mov     [esp+28h+var_20], edx", "mov     edx, ebp", "movzx   edx, dl", "mov     edx, [eax+edx*4]", "xor     ecx, edx", "mov     edx, esi", "shr     edx, 18h", "mov     edx, [eax+edx*4]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, [esp+28h+var_28]", "movzx   ecx, ch", "mov     ecx, [eax+ecx*4]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, ebx", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, byte ptr [esp+28h+var_24]", "mov     [esp+28h+var_1C], edx", "mov     ecx, [eax+ecx*4]", "xor     ecx, [edi+18h]", "mov     esi, ecx", "mov     ecx, ebx", "movzx   ebx, bl", "shr     ecx, 18h", "mov     ecx, [eax+ecx*4]", "ror     ecx, 8", "xor     ecx, esi", "mov     esi, [esp+28h+var_28]", "shr     esi, 10h", "mov     edx, esi", "movzx   esi, dl", "mov     edx, ebp", "mov     ebp, [eax+ebx*4]", "mov     esi, [eax+esi*4]", "mov     ebx, [esp+28h+var_28]", "xor     ebp, [edi+1Ch]", "rol     esi, 10h", "xor     ecx, esi", "movzx   esi, dh", "shr     ebx, 18h", "mov     esi, [eax+esi*4]", "rol     esi, 8", "xor     ecx, esi", "mov     esi, ebp", "mov     ebp, [eax+ebx*4]", "mov     ebx, ebp", "ror     ebx, 8", "xor     esi, ebx", "mov     ebx, edx", "mov     edx, [esp+28h+var_24]", "shr     ebx, 10h", "mov     ebp, esi", "movzx   esi, bl", "mov     ebx, [eax+esi*4]", "movzx   esi, dh", "mov     esi, [eax+esi*4]", "rol     ebx, 10h", "xor     ebx, ebp", "rol     esi, 8", "xor     ebx, esi", "mov     [esp+28h+var_18], ebx", "mov     ebx, [esp+28h+var_20]", "movzx   esi, bl", "mov     esi, [eax+esi*4]", "xor     esi, [edi]", "mov     ebp, esi", "mov     esi, [esp+28h+var_1C]", "shr     esi, 18h", "mov     esi, [eax+esi*4]", "ror     esi, 8", "xor     esi, ebp", "mov     ebp, ecx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+28h+var_18]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     esi, ebp", "movzx   ebp, dh", "mov     edx, ebx", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     esi, ebp", "mov     [esp+28h+var_28], esi", "movzx   esi, byte ptr [esp+28h+var_1C]", "mov     esi, [eax+esi*4]", "xor     esi, [edi+4]", "mov     ebp, esi", "mov     esi, ecx", "shr     esi, 18h", "mov     esi, [eax+esi*4]", "ror     esi, 8", "xor     esi, ebp", "movzx   ebp, bh", "mov     ebx, [esp+28h+var_18]", "mov     ebp, [eax+ebp*4]", "shr     ebx, 10h", "rol     ebp, 8", "xor     esi, ebp", "movzx   ebp, bl", "mov     ebx, [esp+28h+var_18]", "mov     ebp, [eax+ebp*4]", "shr     ebx, 18h", "rol     ebp, 10h", "xor     esi, ebp", "mov     [esp+28h+var_20], esi", "movzx   esi, cl", "movzx   ecx, ch", "mov     esi, [eax+esi*4]", "xor     esi, [edi+8]", "mov     ebp, esi", "mov     esi, [eax+ebx*4]", "ror     esi, 8", "xor     esi, ebp", "mov     ebp, edx", "shr     ebp, 10h", "mov     ebx, ebp", "movzx   ebp, bl", "mov     ebx, [esp+28h+var_1C]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 10h", "xor     esi, ebp", "movzx   ebp, bh", "movzx   ebx, byte ptr [esp+28h+var_18]", "mov     ebp, [eax+ebp*4]", "rol     ebp, 8", "xor     esi, ebp", "mov     [esp+28h+var_24], esi", "mov     esi, [eax+ebx*4]", "xor     esi, [edi+0Ch]", "shr     edx, 18h", "sub     edi, 20h ; ' '", "mov     ebx, [eax+edx*4]", "mov     edx, [esp+28h+var_1C]", "ror     ebx, 8", "shr     edx, 10h", "xor     esi, ebx", "movzx   edx, dl", "mov     ebx, [eax+edx*4]", "mov     edx, [eax+ecx*4]", "rol     ebx, 10h", "xor     ebx, esi", "rol     edx, 8", "xor     ebx, edx", "cmp     [esp+28h+var_14], edi", "jnz     loc_30678"], "preds": [198216, 198264], "succs": [198763, 198264]}, "198763": {"disasm": ["mov     esi, ebx"], "preds": [198264], "succs": [198765]}, "198765": {"disasm": ["mov     ebx, [esp+28h+ctx]", "movzx   edx, byte ptr [esp+28h+var_28]", "mov     ebp, [esp+28h+var_20]", "mov     edi, [esp+28h+var_24]", "mov     ecx, [ebx+100h]", "mov     ebx, esi", "mov     edx, [eax+edx*4]", "xor     ecx, edx", "mov     edx, ebp", "shr     edx, 18h", "mov     edx, [eax+edx*4]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, edi", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, bh", "mov     ebx, ebp", "mov     ecx, [eax+ecx*4]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, [esp+28h+ctx]", "mov     [esp+28h+var_24], edx", "movzx   edx, bl", "mov     ebx, [eax+edx*4]", "xor     ebx, [ecx+104h]", "mov     ecx, edi", "shr     ecx, 18h", "mov     edx, [eax+ecx*4]", "mov     ecx, esi", "shr     ecx, 10h", "ror     edx, 8", "xor     ebx, edx", "mov     edx, [esp+28h+var_28]", "movzx   edx, dh", "mov     edx, [eax+edx*4]", "rol     edx, 8", "xor     ebx, edx", "movzx   edx, cl", "mov     edx, [eax+edx*4]", "rol     edx, 10h", "xor     ebx, edx", "mov     [esp+28h+var_1C], ebx", "mov     ebx, edi", "mov     edi, [esp+28h+ctx]", "movzx   edx, bl", "mov     ecx, [eax+edx*4]", "xor     ecx, [edi+108h]", "mov     edi, esi", "shr     edi, 18h", "mov     edx, [eax+edi*4]", "mov     edi, [esp+28h+var_28]", "ror     edx, 8", "xor     ecx, edx", "mov     edx, edi", "shr     edi, 18h", "shr     edx, 10h", "movzx   edx, dl", "mov     edx, [eax+edx*4]", "rol     edx, 10h", "xor     ecx, edx", "mov     edx, ebp", "movzx   edx, dh", "mov     edx, [eax+edx*4]", "rol     edx, 8", "xor     edx, ecx", "mov     ecx, esi", "movzx   esi, cl", "mov     ecx, [esp+28h+ctx]", "mov     esi, [eax+esi*4]", "xor     esi, [ecx+10Ch]", "mov     ecx, [eax+edi*4]", "ror     ecx, 8", "xor     esi, ecx", "mov     ecx, [esp+28h+var_20]", "shr     ecx, 10h", "movzx   edi, cl", "mov     ecx, [eax+edi*4]", "movzx   edi, bh", "rol     ecx, 10h", "xor     ecx, esi", "mov     esi, [eax+edi*4]", "rol     esi, 8", "xor     ecx, esi", "movzx   esi, byte ptr [esp+28h+var_1C]", "mov     ebp, [esp+28h+ctx]", "mov     ebx, [esp+28h+var_24]", "movzx   esi, byte ptr [esi+eax+400h]", "mov     edi, [ebp+0F4h]", "xor     edi, esi", "mov     esi, edx", "shr     esi, 18h", "movzx   esi, byte ptr [esi+eax+400h]", "shl     esi, 18h", "xor     esi, edi", "movzx   edi, bh", "movzx   edi, byte ptr [edi+eax+400h]", "shl     edi, 8", "xor     esi, edi", "mov     edi, ecx", "shr     edi, 10h", "mov     ebx, edi", "movzx   edi, bl", "movzx   edi, byte ptr [edi+eax+400h]", "shl     edi, 10h", "xor     esi, edi", "mov     edi, [ebp+0F8h]", "mov     [esp+28h+var_28], esi", "movzx   esi, dl", "mov     ebp, [ebp+0FCh]", "movzx   esi, byte ptr [esi+eax+400h]", "xor     edi, esi", "mov     esi, ecx", "shr     esi, 18h", "movzx   esi, byte ptr [esi+eax+400h]", "shl     esi, 18h", "xor     esi, edi", "mov     edi, [esp+28h+var_24]", "shr     edi, 10h", "mov     ebx, edi", "movzx   edi, bl", "mov     ebx, [esp+28h+var_1C]", "movzx   edi, byte ptr [edi+eax+400h]", "shl     edi, 10h", "xor     esi, edi", "movzx   edi, bh", "movzx   edi, byte ptr [edi+eax+400h]", "shl     edi, 8", "xor     esi, edi", "movzx   edi, cl", "movzx   ecx, ch", "movzx   edi, byte ptr [edi+eax+400h]", "xor     ebp, edi", "mov     edi, [esp+28h+var_24]", "shr     edi, 18h", "movzx   edi, byte ptr [edi+eax+400h]", "shl     edi, 18h", "xor     edi, ebp", "mov     ebp, [esp+28h+var_1C]", "shr     ebp, 10h", "mov     ebx, ebp", "movzx   ebp, bl", "mov     ebx, [esp+28h+ctx]", "movzx   ebp, byte ptr [ebp+eax+400h]", "shl     ebp, 10h", "xor     edi, ebp", "movzx   ebp, dh", "movzx   ebp, byte ptr [ebp+eax+400h]", "shl     ebp, 8", "xor     edi, ebp", "movzx   ebp, byte ptr [esp+28h+var_24]", "movzx   ebp, byte ptr [ebp+eax+400h]", "xor     ebp, [ebx+0F0h]", "mov     ebx, [esp+28h+var_1C]", "shr     ebx, 18h", "shr     edx, 10h", "movzx   ebx, byte ptr [ebx+eax+400h]", "movzx   edx, dl", "shl     ebx, 18h", "xor     ebp, ebx", "movzx   ebx, byte ptr (dword_DB278 - 0DAE78h)[edx+eax]", "shl     ebx, 10h", "xor     ebp, ebx", "movzx   ebx, byte ptr [ecx+eax+400h]", "shl     ebx, 8", "xor     ebp, ebx", "mov     ebx, [esp+28h+bx_0]", "mov     [ebx], ebp", "mov     eax, [esp+28h+var_28]", "mov     [ebx+8], esi", "mov     [ebx+0Ch], edi", "mov     [ebx+4], eax", "add     esp, 18h", "mov     eax, 40h ; '@'", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [198763, 199392], "succs": []}, "199392": {"disasm": ["lea     eax, (dec_tables.T - 0DAE78h)[edx]", "jmp     loc_3086D"], "preds": [198112], "succs": [198765]}}, "gen_k": {"306912": {"disasm": ["push    ebp", "push    edi", "mov     edi, p_0", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     [esp+38h+small_k], small_k_0", "push    0; nlimbs", "call    _gcry_mpi_alloc_secure", "pop     ebp", "push    dword ptr [p_0+4]; nlimbs", "mov     esi, eax", "call    _gcry_mpi_alloc", "mov     [esp+3Ch+rndbuf], p_0", "mov     [esp+3Ch+a], p_0; a", "mov     ebp, eax", "call    _gcry_mpi_copy", "mov     p_0, eax", "pop     p_1", "push    [esp+38h+rndbuf]; a", "call    _gcry_mpi_get_nbits", "mov     edx, [esp+3Ch+small_k]", "add     esp, 10h", "test    edx, edx", "jz      loc_4B1E2"], "preds": [], "succs": [306995, 307682]}, "306995": {"disasm": ["xor     edx, edx", "mov     ecx, 200h", "jmp     short loc_4AF52"], "preds": [306912], "succs": [307026]}, "307008": {"disasm": ["add     edx, 1", "mov     ecx, ds:(t_8366 - 0DAE78h)[ebx+edx*8]", "test    ecx, ecx", "jz      loc_4B1BB"], "preds": [307026], "succs": [307026, 307643]}, "307026": {"disasm": ["cmp     orig_nbits, ecx", "ja      short loc_4AF40"], "preds": [306995, 307008], "succs": [307008, 307030]}, "307030": {"disasm": ["mov     edx, ds:(dword_A1CE4 - 0DAE78h)[ebx+edx*8]"], "preds": [307026], "succs": [307037]}, "307037": {"disasm": ["lea     edx, [edx+edx*2]", "shr     edx, 1", "mov     [esp+2Ch+nbits], edx", "cmp     orig_nbits, nbits_0", "jbe     loc_4B1EB"], "preds": [307030, 307643], "succs": [307054, 307691]}, "307054": {"disasm": ["mov     orig_nbits, [esp+2Ch+nbits]", "sub     esp, 0Ch", "add     eax, 7", "shr     eax, 3", "mov     [esp+38h+small_k], eax", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jnz     loc_4B1CB"], "preds": [307037, 307682], "succs": [307089, 307659]}, "307089": {"disasm": ["sub     esp, 4", "push    1; v", "push    [esp+34h+rndbuf]; u", "push    p_1; w", "call    _gcry_mpi_sub_ui", "lea     eax, (aPkElg - 0DAE78h)[ebx]; \"pk_elg\"", "add     esp, 10h", "cmp     [esp+2Ch+nbits], 1Fh", "mov     [esp+2Ch+rndbuf], 0", "mov     [esp+2Ch+var_20], eax", "setbe   byte ptr [esp+2Ch+nbits]"], "preds": [307054, 307659], "succs": [307134]}, "307134": {"disasm": ["mov     ecx, [esp+2Ch+rndbuf]", "test    ecx, ecx", "jz      loc_4B0C0"], "preds": [307089, 307312, 307333, 307432, 307453, 307467], "succs": [307145, 307392]}, "307145": {"disasm": ["cmp     byte ptr [esp+2Ch+nbits], 0", "jnz     loc_4B0C0"], "preds": [307134, 307347], "succs": [307156, 307392]}, "307156": {"disasm": ["sub     esp, 8", "push    1; level", "push    4; nbytes", "call    _gcry_random_bytes_secure", "mov     ecx, [esp+3Ch+rndbuf]", "mov     edx, [pp]", "mov     [ecx], edx", "mov     [esp+3Ch+a], pp; p", "call    _gcry_free", "add     esp, 10h"], "preds": [307145], "succs": [307187]}, "307187": {"disasm": ["push    0; sign", "push    [esp+30h+small_k]; nbytes", "push    [esp+34h+rndbuf]; buffer_arg", "push    k; a", "call    _gcry_mpi_set_buffer", "add     esp, 10h", "jmp     short loc_4B05F"], "preds": [307156, 307392], "succs": [307295]}, "307216": {"disasm": ["sub     esp, 8", "push    0; v", "push    k; u", "call    _gcry_mpi_cmp_ui", "add     esp, 10h", "test    eax, eax", "jle     loc_4B0E8"], "preds": [307295], "succs": [307238, 307432]}, "307238": {"disasm": ["sub     esp, 4", "push    p_1; xb", "push    k; xa", "push    temp; g", "call    _gcry_mpi_gcd", "add     esp, 10h", "test    eax, eax", "jnz     found"], "preds": [307216], "succs": [307260, 307504]}, "307260": {"disasm": ["sub     esp, 4", "push    1; v", "push    k; u", "push    k; w", "call    _gcry_mpi_add_ui", "mov     [esp+3Ch+a], 1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jnz     loc_4B190"], "preds": [307238], "succs": [307295, 307600]}, "307295": {"disasm": ["sub     esp, 8", "push    p_1; v", "push    k; u", "call    _gcry_mpi_cmp", "add     esp, 10h", "test    eax, eax", "js      short loc_4B010"], "preds": [307187, 307260, 307600, 307614], "succs": [307216, 307312]}, "307312": {"disasm": ["sub     esp, 0Ch", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      loc_4AFBE"], "preds": [307295], "succs": [307134, 307333]}, "307333": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0DAE78h)[ebx]", "test    eax, eax", "jz      loc_4AFBE"], "preds": [307312], "succs": [307134, 307347]}, "307347": {"disasm": ["sub     esp, 0Ch", "push    0", "push    0", "push    2Bh ; '+'", "push    [esp+44h+var_20]", "push    ds:(progress_cb_data_1 - 0DAE78h)[ebx]", "call    eax", "mov     ecx, [esp+4Ch+rndbuf]", "add     esp, 20h", "test    rndbuf_0, rndbuf_0", "jnz     loc_4AFC9"], "preds": [307333], "succs": [307145, 307383]}, "307383": {"disasm": ["lea     k, [k+0]", "xchg    ax, ax"], "preds": [307347], "succs": [307392]}, "307392": {"disasm": ["sub     esp, 0Ch", "push    [esp+38h+rndbuf]; p", "call    _gcry_free", "pop     eax", "pop     edx", "push    1; level", "push    [esp+38h+small_k]; nbytes", "call    _gcry_random_bytes_secure", "mov     [esp+3Ch+rndbuf], eax", "add     esp, 10h", "jmp     loc_4AFF3"], "preds": [307134, 307145, 307383], "succs": [307187]}, "307432": {"disasm": ["sub     esp, 0Ch", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      loc_4AFBE"], "preds": [307216], "succs": [307134, 307453]}, "307453": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0DAE78h)[ebx]", "test    eax, eax", "jz      loc_4AFBE"], "preds": [307432], "succs": [307134, 307467]}, "307467": {"disasm": ["sub     esp, 0Ch", "push    0", "push    0", "push    2Dh ; '-'", "push    [esp+44h+var_20]", "push    ds:(progress_cb_data_1 - 0DAE78h)[ebx]", "call    eax", "add     esp, 20h", "jmp     loc_4AFBE"], "preds": [307453], "succs": [307134]}, "307504": {"disasm": ["sub     esp, 0Ch", "push    [esp+38h+rndbuf]; p", "call    _gcry_free", "mov     [esp+3Ch+a], 1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      short loc_4B174"], "preds": [307238], "succs": [307535, 307572]}, "307535": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0DAE78h)[ebx]", "test    eax, eax", "jz      short loc_4B174"], "preds": [307504], "succs": [307545, 307572]}, "307545": {"disasm": ["lea     edx, (aPkElg - 0DAE78h)[ebx]; \"pk_elg\"", "sub     esp, 0Ch", "push    0", "push    0", "push    0Ah", "push    edx", "push    ds:(progress_cb_data_1 - 0DAE78h)[ebx]", "call    eax", "add     esp, 20h"], "preds": [307535], "succs": [307572]}, "307572": {"disasm": ["sub     esp, 0Ch", "push    p_1; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+a], temp; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "mov     eax, k", "pop     ebx", "pop     k", "pop     p_1", "pop     temp", "retn"], "preds": [307504, 307535, 307545], "succs": []}, "307600": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0DAE78h)[ebx]", "test    eax, eax", "jz      loc_4B05F"], "preds": [307260], "succs": [307295, 307614]}, "307614": {"disasm": ["sub     esp, 0Ch", "push    0", "push    0", "push    2Eh ; '.'", "push    [esp+44h+var_20]", "push    ds:(progress_cb_data_1 - 0DAE78h)[ebx]", "call    eax", "add     esp, 20h", "jmp     loc_4B05F"], "preds": [307600], "succs": [307295]}, "307643": {"disasm": ["mov     edx, orig_nbits", "shr     edx, 3", "add     edx, 0C8h", "jmp     loc_4AF5D"], "preds": [307008], "succs": [307037]}, "307659": {"disasm": ["lea     eax, (aChoosingARando_1 - 0DAE78h)[ebx]; \"choosing a random k\\n\"", "sub     esp, 0Ch", "push    eax; fmt", "call    _gcry_log_debug", "add     esp, 10h", "jmp     loc_4AF91"], "preds": [307054], "succs": [307089]}, "307682": {"disasm": ["mov     [esp+2Ch+nbits], orig_nbits", "jmp     loc_4AF6E"], "preds": [306912], "succs": [307054]}, "307691": {"disasm": ["lea     orig_nbits, (__FUNCTION___8393 - 0DAE78h)[ebx]; \"gen_k\"", "push    esi", "push    eax; func", "lea     eax, (aElgamalC - 0DAE78h)[ebx]; \"elgamal.c\"", "push    0D4h; line", "push    eax; file", "call    _gcry_bug"], "preds": [307037], "succs": []}}, "sign_0": {"307728": {"disasm": ["push    ebp", "mov     ebp, a", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     [esp+38h+input], input_0", "mov     [esp+38h+b], b_0", "push    dword ptr [a+4]; nlimbs", "call    _gcry_mpi_alloc", "mov     edi, eax", "pop     t", "push    dword ptr [a+4]; nlimbs", "call    _gcry_mpi_alloc", "mov     [esp+3Ch+inv], eax", "pop     edx", "mov     esi, [esp+38h+skey]", "push    dword ptr [esi]; a", "call    _gcry_mpi_copy", "add     esp, 0Ch", "push    1; v", "mov     esi, eax", "push    p_1; u", "push    p_1; w", "call    _gcry_mpi_sub_ui", "mov     eax, [esp+3Ch+skey]", "xor     edx, edx; small_k", "mov     eax, [eax]; p", "call    gen_k", "mov     ecx, [esp+3Ch+skey]", "push    dword ptr [ecx]; mod", "mov     [esp+40h+k], k_0", "push    k_0; expo", "mov     edx, [esp+44h+skey]", "push    dword ptr [edx+4]; base", "push    a; res", "call    _gcry_mpi_powm", "add     esp, 1Ch", "push    a; v", "mov     ecx, [esp+34h+skey]", "push    dword ptr [ecx+0Ch]; u", "push    t; w", "call    _gcry_mpi_mul", "push    p_1; m", "push    t; v", "push    [esp+44h+input]; u", "push    t; w", "call    _gcry_mpi_subm", "add     esp, 1Ch", "push    p_1; n", "push    [esp+34h+k]; a", "mov     a, [esp+38h+inv]", "push    ebp; x", "call    _gcry_mpi_invm", "push    p_1; m", "push    ebp; v", "push    t; u", "push    [esp+48h+b]; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    [esp+38h+k]; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], t; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], ebp; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], p_1; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "pop     ebx", "pop     p_1", "pop     t", "pop     ebp", "retn"], "preds": [], "succs": []}}, "do_encrypt_3": {"308720": {"disasm": ["push    ebp", "mov     ebp, b", "mov     b, 1", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+pkey]", "mov     [esp+2Ch+a], a_0", "mov     [esp+2Ch+input], input_0", "mov     a_0, [esi]; p", "call    gen_k", "push    dword ptr [esi]; mod", "mov     edi, eax", "push    k; expo", "push    dword ptr [esi+4]; base", "push    [esp+38h+a]; res", "call    _gcry_mpi_powm", "push    dword ptr [esi]; mod", "push    k; expo", "push    dword ptr [esi+8]; base", "push    b; res", "call    _gcry_mpi_powm", "add     esp, 20h", "push    dword ptr [esi]; m", "push    [esp+30h+input]; v", "push    b; u", "push    b; w", "call    _gcry_mpi_mulm", "mov     [esp+3Ch+var_3C], k; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     k", "pop     b", "retn"], "preds": [], "succs": []}}, "decrypt": {"310528": {"disasm": ["push    ebp", "push    edi", "push    esi", "mov     esi, b_0", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     ebp, [esp+38h+arg_0]", "mov     [esp+38h+a], a_0", "mov     [esp+38h+output], output_0", "push    dword ptr [ebp+0]; a", "call    _gcry_mpi_get_nbits", "mov     edi, eax", "pop     nbits_0", "push    [esp+38h+a]; a", "call    _gcry_mpi_normalize", "mov     [esp+3Ch+var_3C], b_0; a", "mov     [esp+3Ch+b], b_0", "mov     b_0, nbits_0", "call    _gcry_mpi_normalize", "mov     [esp+3Ch+var_3C], nbits_0; nbits", "call    _gcry_mpi_snew", "mov     [esp+3Ch+nbits], esi", "mov     nbits_0, eax", "mov     [esp+3Ch+var_3C], nbits_0; nbits", "call    _gcry_mpi_snew", "pop     edx", "push    [esp+38h+nbits]; nbits", "mov     nbits_0, eax", "call    _gcry_mpi_new", "add     esp, 0Ch", "push    0; level", "push    [esp+34h+nbits]; nbits", "mov     [esp+38h+nbits], r_0", "push    r_0; w", "call    _gcry_mpi_randomize", "push    dword ptr [ebp+0]; mod", "mov     edx, [esp+40h+arg_4]", "push    dword ptr [edx]; expo", "push    [esp+44h+nbits]; base", "push    t1; res", "call    _gcry_mpi_powm", "add     esp, 20h", "push    dword ptr [ebp+0]; m", "push    [esp+30h+nbits]; v", "push    [esp+34h+a]; u", "push    t2; w", "call    _gcry_mpi_mulm", "push    dword ptr [ebp+0]; mod", "mov     ecx, [esp+40h+arg_4]", "push    dword ptr [ecx]; expo", "push    t2; base", "push    t2; res", "call    _gcry_mpi_powm", "add     esp, 1Ch", "push    dword ptr [ebp+0]; n", "push    t2; a", "push    t2; x", "call    _gcry_mpi_invm", "push    dword ptr [ebp+0]; m", "push    t2; v", "push    t1; u", "push    t1; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    [esp+38h+nbits]; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], t2; a", "call    _gcry_mpi_free", "push    dword ptr [ebp+0]; m", "push    t1; v", "push    [esp+44h+b]; u", "push    [esp+48h+output]; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    t1; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "pop     ebx", "pop     t2", "pop     t1", "pop     ebp", "retn"], "preds": [], "succs": []}}}