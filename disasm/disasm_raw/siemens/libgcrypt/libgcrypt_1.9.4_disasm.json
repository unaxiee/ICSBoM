{"arch": "metapc", "ghash_internal": {"110176": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 5Ch", "mov     esi, [esp+6Ch+result]", "mov     edx, [esp+6Ch+c]", "mov     [esp+6Ch+var_50], esi", "mov     esi, [esp+6Ch+buf]", "mov     [esp+6Ch+buf_0], esi", "mov     esi, large gs:14h", "mov     [esp+6Ch+var_20], esi", "xor     esi, esi", "mov     ecx, dword ptr (gcm_table.counter_head - 0F6E70h)[eax]", "add     ecx, 1", "mov     dword ptr (gcm_table.counter_head - 0F6E70h)[eax], ecx", "mov     ecx, (gcm_table.counter_tail - 0F6E70h)[eax]", "add     ecx, 1", "mov     (gcm_table.counter_tail - 0F6E70h)[eax], ecx", "movzx   ecx, byte ptr [edx+100h]", "movzx   ecx, byte ptr [edx+120h]", "movzx   ecx, byte ptr [edx+140h]", "movzx   ecx, byte ptr [edx+160h]", "movzx   ecx, byte ptr [edx+180h]", "movzx   ecx, byte ptr [edx+1A0h]", "movzx   ecx, byte ptr [edx+1C0h]", "movzx   ecx, byte ptr [edx+1E0h]", "movzx   ecx, byte ptr [edx+200h]", "movzx   ecx, byte ptr [edx+220h]", "movzx   ecx, byte ptr [edx+240h]", "movzx   ecx, byte ptr [edx+260h]", "movzx   ecx, byte ptr [edx+280h]", "movzx   ecx, byte ptr [edx+2A0h]", "movzx   ecx, byte ptr [edx+2C0h]", "movzx   ecx, byte ptr [edx+2E0h]", "movzx   ecx, byte ptr [edx+2FFh]", "movzx   ecx, byte ptr (gcm_table.counter_head - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.cacheline_align+1Ch - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+20h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+40h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+60h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+80h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+0A0h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+0C0h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+0E0h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+100h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+120h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+140h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+160h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+180h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+1A0h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+1C0h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.R+1E0h - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.counter_tail - 0F6E70h)[eax]", "movzx   ecx, byte ptr (gcm_table.counter_tail+3 - 0F6E70h)[eax]", "mov     ecx, [esp+6Ch+nblocks]", "test    ecx, ecx", "jz      loc_1B13B"], "preds": [], "succs": [110527, 110907]}, "110527": {"disasm": ["lea     esi, [edx+100h]", "mov     [esp+6Ch+var_54], esi", "lea     esi, [esp+6Ch+var_23]", "mov     [esp+6Ch+var_40], esi", "lea     eax, (gcm_table.counter_head - 0F6E70h)[eax]", "lea     esi, [esp+6Ch+var_31]", "mov     [esp+6Ch+var_48], eax", "mov     [esp+6Ch+var_44], esi", "lea     esi, [esi+0]", "nop"], "preds": [110176], "succs": [110568]}, "110568": {"disasm": ["mov     eax, [esp+6Ch+buf_0]", "mov     esi, [esp+6Ch+var_50]", "mov     ebx, [esp+6Ch+var_54]", "movq    xmm0, ds:(_GLOBAL_OFFSET_TABLE_ - 0F6E70h)[eax]", "movq    xmm1, qword ptr [esi]", "movq    xmm2, qword ptr [eax+8]", "pxor    xmm1, xmm0", "movq    xmm0, qword ptr [esi+8]", "movq    [esp+6Ch+var_30], xmm1", "pxor    xmm0, xmm2", "movdqa  xmm1, xmm0", "movq    qword ptr [esp+44h], xmm0", "psrlq   xmm1, 20h ; ' '", "movd    esi, xmm1", "movd    eax, xmm1", "shr     esi, 18h", "shr     eax, 10h", "mov     ecx, esi", "and     esi, 0F0h", "movzx   eax, al", "and     ecx, 0Fh", "add     esi, ebx", "add     ecx, 10h", "shl     ecx, 4", "add     ecx, ebx", "mov     edx, [ecx]", "xor     edx, [esi]", "mov     ebx, [ecx+4]", "xor     ebx, [esi+4]", "mov     [esp+6Ch+var_60], edx", "mov     edx, [ecx+8]", "mov     ecx, [ecx+0Ch]", "xor     ecx, [esi+0Ch]", "xor     edx, [esi+8]", "mov     esi, ecx", "mov     ecx, [esp+6Ch+var_40]", "mov     [esp+6Ch+var_5C], ecx", "jmp     short loc_1B07A"], "preds": [110527, 110854], "succs": [110714]}, "110704": {"disasm": ["movzx   eax, byte ptr [edi]", "sub     edi, 1", "mov     [esp+6Ch+var_5C], edi"], "preds": [110714], "succs": [110714]}, "110714": {"disasm": ["mov     edi, [esp+6Ch+var_54]", "mov     ecx, eax", "and     eax, 0F0h", "mov     ebp, ebx", "shr     ebp, 8", "and     ecx, 0Fh", "shl     ebx, 18h", "add     ecx, 10h", "shl     ecx, 4", "add     eax, edi", "add     ecx, edi", "mov     edi, [esp+6Ch+var_60]", "shl     edi, 18h", "xor     edi, ebp", "mov     ebp, edx", "shl     edx, 18h", "xor     edi, [eax+4]", "shr     ebp, 8", "xor     ebx, ebp", "mov     ebp, [eax+8]", "mov     [esp+6Ch+var_58], edi", "xor     ebp, ebx", "mov     ebx, esi", "shr     ebx, 8", "xor     edx, ebx", "xor     edx, [eax+0Ch]", "mov     ebx, esi", "movzx   esi, bl", "mov     ebx, [esp+6Ch+var_58]", "xor     ebx, [ecx+4]", "mov     edi, edx", "mov     edx, [esp+6Ch+var_48]", "movzx   edx, word ptr [edx+esi*2+40h]", "mov     esi, [ecx+0Ch]", "shl     edx, 10h", "xor     edx, dword ptr ds:(_GLOBAL_OFFSET_TABLE_ - 0F6E70h)[eax]", "mov     eax, [esp+6Ch+var_60]", "xor     esi, edi", "mov     edi, [esp+6Ch+var_5C]", "shr     eax, 8", "xor     edx, eax", "xor     edx, [ecx]", "mov     [esp+6Ch+var_60], edx", "mov     edx, [ecx+8]", "xor     edx, ebp", "cmp     [esp+6Ch+var_44], edi", "jnz     loc_1B070"], "preds": [110568, 110704], "succs": [110704, 110854]}, "110854": {"disasm": ["mov     edi, [esp+6Ch+var_50]", "bswap   ebx", "bswap   edx", "mov     eax, [esp+6Ch+var_60]", "add     [esp+6Ch+buf_0], 10h", "sub     [esp+6Ch+nblocks], 1", "bswap   eax", "mov     [edi], eax", "mov     eax, esi", "bswap   eax", "mov     [edi+4], ebx", "mov     [edi+8], edx", "mov     [edi+0Ch], eax", "jnz     loc_1AFE8"], "preds": [110714], "succs": [110568, 110899]}, "110899": {"disasm": ["mov     [esp+6Ch+nblocks], 60h ; '`'"], "preds": [110854], "succs": [110907]}, "110907": {"disasm": ["mov     eax, [esp+6Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_1B154"], "preds": [110176, 110899], "succs": [110920, 110932]}, "110920": {"disasm": ["mov     eax, [esp+6Ch+nblocks]", "add     esp, 5Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [110907], "succs": []}, "110932": {"disasm": ["call    __stack_chk_fail_local"], "preds": [110907], "succs": []}}, "_gcry_md_block_write": {"176096": {"disasm": ["push    ebp", "mov     eax, 1", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ebp, [esp+2Ch+hd]", "mov     edi, [esp+2Ch+inlen]", "mov     ecx, [hd_0+94h]", "shl     eax, cl", "mov     [esp+2Ch+var_24], ecx", "mov     [esp+2Ch+blocksize], eax", "cmp     blocksize_0, 80h", "ja      loc_2B210"], "preds": [], "succs": [176153, 176656]}, "176153": {"disasm": ["mov     blocksize_0, [hd_0+98h]", "test    eax, eax", "jz      loc_2B1A6"], "preds": [176096], "succs": [176167, 176550]}, "176167": {"disasm": ["mov     blocksize_shift_0, [hd_0+90h]", "cmp     ecx, [esp+2Ch+blocksize]", "ja      loc_2B1B0"], "preds": [176153], "succs": [176182, 176560]}, "176182": {"disasm": ["test    ecx, ecx", "jz      loc_2B209"], "preds": [176167], "succs": [176190, 176649]}, "176190": {"disasm": ["mov     eax, ecx", "jmp     short loc_2B089"], "preds": [176182], "succs": [176265]}, "176200": {"disasm": ["mov     esi, [esp+2Ch+blocksize]", "sub     esi, eax", "cmp     esi, copylen", "cmova   esi, copylen", "test    copylen, copylen", "jz      loc_2B0E9"], "preds": [176265], "succs": [176218, 176361]}, "176218": {"disasm": ["sub     esp, 4", "add     eax, hd_0", "sub     inlen_0, copylen", "push    copylen; n", "push    [esp+34h+inbuf]; src", "push    eax; dest", "call    _memcpy", "mov     eax, [hd_0+90h]", "add     [esp+3Ch+inbuf], copylen", "add     esp, 10h", "add     eax, copylen", "mov     [hd_0+90h], eax", "test    eax, eax", "jz      loc_2B209"], "preds": [176200], "succs": [176265, 176649]}, "176265": {"disasm": ["cmp     [esp+2Ch+blocksize], eax", "jnz     short loc_2B048"], "preds": [176190, 176218], "succs": [176200, 176270]}, "176270": {"disasm": ["sub     esp, 4", "push    1", "push    hd_0", "push    hd_0", "call    dword ptr [hd_0+98h]", "movq    xmm1, qword ptr [hd_0+80h]", "add     esp, 10h", "mov     dword ptr [hd_0+90h], 0", "movdqa  xmm0, ds:(xmmword_A1E60 - 0F6E70h)[ebx]", "mov     esi, eax", "paddq   xmm1, xmm0", "movdqa  xmm0, xmm1", "movd    ecx, xmm1", "movq    qword ptr [hd_0+80h], xmm1", "psrlq   xmm0, 20h ; ' '", "movd    nburn, xmm0", "or      eax, ecx", "jnz     short loc_2B0E9"], "preds": [176265], "succs": [176347, 176361]}, "176347": {"disasm": ["add     dword ptr [hd_0+88h], 1", "adc     dword ptr [hd_0+8Ch], 0"], "preds": [176270], "succs": [176361]}, "176361": {"disasm": ["test    inlen_0, inlen_0", "jz      loc_2B1A6"], "preds": [176200, 176270, 176347, 176560, 176649], "succs": [176369, 176550]}, "176369": {"disasm": ["cmp     [esp+2Ch+blocksize], inlen_0", "ja      loc_2B1C8"], "preds": [176361], "succs": [176378, 176584]}, "176378": {"disasm": ["movzx   ecx, byte ptr [esp+2Ch+var_24]", "mov     edx, inlen_0", "sub     esp, 4", "shr     edx, cl", "mov     [esp+30h+inblocks], inblocks_0", "push    inblocks_0", "push    [esp+34h+inbuf]", "push    hd_0", "call    dword ptr [hd_0+98h]", "mov     edx, [esp+3Ch+inblocks]", "add     esp, 10h", "mov     [esp+2Ch+var_28], 0", "cmp     esi, nburn", "cmovb   esi, nburn", "movd    xmm1, [esp+2Ch+var_28]", "mov     dword ptr [hd_0+90h], 0", "mov     [esp+2Ch+blocksize], edx", "movd    xmm0, [esp+2Ch+blocksize]", "punpckldq xmm0, xmm1", "movq    xmm1, qword ptr [hd_0+80h]", "paddq   xmm0, xmm1", "movdqa  xmm1, xmm0", "movd    nburn, xmm0", "psrlq   xmm1, 20h ; ' '", "cmp     eax, edx", "movd    ecx, xmm1", "sbb     ecx, [esp+2Ch+var_28]", "movdqa  xmm1, ds:(xmmword_A1E60 - 0F6E70h)[ebx]", "jnb     loc_2B200"], "preds": [176369], "succs": [176503, 176640]}, "176503": {"disasm": ["mov     eax, [esp+2Ch+inblocks]", "movq    qword ptr [hd_0+80h], xmm0", "movzx   ecx, byte ptr [esp+2Ch+var_24]", "movq    xmm2, qword ptr [hd_0+88h]", "paddq   xmm1, xmm2", "shl     eax, cl", "movq    qword ptr [hd_0+88h], xmm1", "sub     edi, eax", "jnz     short loc_2B1C1"], "preds": [176378, 176640], "succs": [176546, 176577]}, "176546": {"disasm": ["test    stack_burn, stack_burn", "jnz     short loc_2B1E3"], "preds": [176503], "succs": [176550, 176611]}, "176550": {"disasm": ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     hd_0", "retn"], "preds": [176153, 176361, 176546, 176584], "succs": []}, "176560": {"disasm": ["mov     dword ptr [hd_0+90h], 0", "xor     esi, esi", "jmp     loc_2B0E9"], "preds": [176167], "succs": [176361]}, "176577": {"disasm": ["add     [esp+2Ch+inbuf], eax", "lea     stack_burn, [stack_burn+0]"], "preds": [176503], "succs": [176584]}, "176584": {"disasm": ["sub     esp, 4", "push    inlen_0; n", "push    [esp+34h+inbuf]; src", "push    hd_0; dest", "call    _memcpy", "add     esp, 10h", "mov     [hd_0+90h], inlen_0", "test    stack_burn, stack_burn", "jz      short loc_2B1A6"], "preds": [176369, 176577], "succs": [176550, 176611]}, "176611": {"disasm": ["sub     esp, 0Ch", "push    stack_burn; bytes", "call    __gcry_burn_stack", "add     esp, 10h", "add     esp, 1Ch", "pop     ebx", "pop     stack_burn", "pop     edi", "pop     hd_0", "retn"], "preds": [176546, 176584], "succs": []}, "176640": {"disasm": ["pxor    xmm1, xmm1", "jmp     loc_2B177"], "preds": [176378], "succs": [176503]}, "176649": {"disasm": ["xor     esi, esi", "jmp     loc_2B0E9"], "preds": [176182, 176218], "succs": [176361]}, "176656": {"disasm": ["lea     blocksize_0, (__FUNCTION___7559 - 0F6E70h)[ebx]; \"_gcry_md_block_write\"", "push    edx", "push    eax; func", "lea     eax, (aHashCommonC - 0F6E70h)[ebx]; \"hash-common.c\"", "push    84h; line", "push    eax; file", "call    _gcry_bug"], "preds": [176096], "succs": []}}, "prefetch_dec": {"224320": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, dword ptr (dec_tables.counter_head - 0F6E70h)[eax]", "add     edx, 1", "mov     dword ptr (dec_tables.counter_head - 0F6E70h)[eax], edx", "mov     edx, (dec_tables.counter_tail - 0F6E70h)[eax]", "add     edx, 1", "mov     (dec_tables.counter_tail - 0F6E70h)[eax], edx", "movzx   edx, byte ptr (dec_tables.counter_head - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.cacheline_align+1Ch - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+20h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+40h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+60h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+80h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+0A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+0C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+0E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+100h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+120h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+140h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+160h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+180h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+1A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+1C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+1E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+200h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+220h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+240h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+260h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+280h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+2A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+2C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+2E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+300h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+320h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+340h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+360h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+380h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+3A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+3C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.T+3E0h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+20h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+40h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+60h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+80h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+0A0h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+0C0h - 0F6E70h)[eax]", "movzx   edx, (dec_tables.inv_sbox+0E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (dec_tables.counter_tail - 0F6E70h)[eax]", "movzx   eax, byte ptr (dec_tables.counter_tail+3 - 0F6E70h)[eax]", "retn"], "preds": [], "succs": []}}, "do_encrypt_0": {"224672": {"disasm": ["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 24h", "mov     eax, [esp+34h+ax_0]", "mov     edx, [esp+34h+ctx]", "mov     esi, [esp+34h+ctx]", "mov     [esp+34h+var_28], ebp", "mov     ebx, [esp+34h+ctx]", "mov     ecx, [eax]", "xor     ecx, [edx]", "mov     edx, [eax+4]", "xor     edx, [esi+4]", "mov     ebx, [ebx+1E0h]", "mov     esi, [eax+8]", "mov     [esp+34h+var_24], edx", "mov     edx, [esp+34h+ctx]", "mov     [esp+34h+var_20], ebx", "mov     ebx, [eax+0Ch]", "xor     esi, [edx+8]", "xor     ebx, [edx+0Ch]", "mov     eax, esi", "movzx   edi, al", "lea     eax, (enc_tables.counter_head - 0F6E70h)[ebp]", "mov     edi, [eax+edi*4+40h]", "xor     edi, [edx+18h]", "mov     edx, [esp+34h+var_24]", "mov     ebp, edi", "shr     edx, 18h", "mov     edi, [eax+edx*4+40h]", "ror     edi, 8", "xor     edi, ebp", "mov     ebp, ecx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+ctx]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     edi, ebp", "movzx   ebp, bh", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     edi, ebp", "mov     [esp+34h+var_30], edi", "movzx   edi, byte ptr [esp+34h+var_24]", "mov     edi, [eax+edi*4+40h]", "xor     edi, [edx+14h]", "mov     edx, esi", "mov     ebp, edi", "mov     edi, ecx", "shr     edi, 18h", "mov     edi, [eax+edi*4+40h]", "ror     edi, 8", "xor     edi, ebp", "movzx   ebp, dh", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     edi, ebp", "mov     ebp, ebx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+ctx]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     edi, ebp", "mov     [esp+34h+var_2C], edi", "movzx   edi, cl", "movzx   ecx, ch", "mov     edi, [eax+edi*4+40h]", "xor     edi, [edx+10h]", "mov     edx, [esp+34h+var_24]", "mov     ebp, edi", "mov     edi, ebx", "movzx   ebx, bl", "shr     edi, 18h", "mov     ebx, [eax+ebx*4+40h]", "mov     edi, [eax+edi*4+40h]", "ror     edi, 8", "xor     edi, ebp", "movzx   ebp, dh", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     edi, ebp", "mov     ebp, esi", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+ctx]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     edi, ebp", "shr     esi, 18h", "xor     ebx, [edx+1Ch]", "mov     esi, [eax+esi*4+40h]", "mov     [esp+34h+var_34], edi", "mov     edx, [esp+34h+var_24]", "ror     esi, 8", "xor     ebx, esi", "mov     esi, [eax+ecx*4+40h]", "shr     edx, 10h", "movzx   edx, dl", "mov     edx, [eax+edx*4+40h]", "rol     esi, 8", "xor     esi, ebx", "mov     ebx, [esp+34h+var_20]", "rol     edx, 10h", "xor     esi, edx", "cmp     ebx, 2", "jle     loc_372C0"], "preds": [], "succs": [225028, 225984]}, "225028": {"disasm": ["mov     ecx, [esp+34h+ctx]", "sub     ebx, 3", "mov     edx, ebx", "shr     edx, 1", "mov     [esp+34h+var_14], edx", "shl     edx, 5", "lea     ebx, [ecx+edx+40h]", "mov     [esp+34h+var_18], ebx", "lea     edi, [ecx+20h]", "mov     ebx, esi", "lea     esi, [esi+0]", "nop"], "preds": [224672], "succs": [225064]}, "225064": {"disasm": ["movzx   edx, byte ptr [esp+34h+var_30]", "mov     ebp, [esp+34h+var_2C]", "mov     esi, [esp+34h+var_34]", "mov     edx, [eax+edx*4+40h]", "xor     edx, [edi+8]", "mov     ecx, edx", "mov     edx, ebp", "shr     edx, 18h", "mov     edx, [eax+edx*4+40h]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, esi", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, bh", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, ebp", "mov     [esp+34h+var_1C], edx", "movzx   edx, cl", "mov     ecx, [edi+4]", "mov     edx, [eax+edx*4+40h]", "xor     ecx, edx", "mov     edx, esi", "shr     edx, 18h", "mov     edx, [eax+edx*4+40h]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, [esp+34h+var_30]", "movzx   ecx, ch", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, ebx", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, byte ptr [esp+34h+var_34]", "mov     [esp+34h+var_24], edx", "mov     edx, ebp", "mov     ecx, [eax+ecx*4+40h]", "xor     ecx, [edi]", "mov     esi, ecx", "mov     ecx, ebx", "movzx   ebx, bl", "shr     ecx, 18h", "mov     ebp, [eax+ebx*4+40h]", "mov     ecx, [eax+ecx*4+40h]", "xor     ebp, [edi+0Ch]", "ror     ecx, 8", "xor     ecx, esi", "movzx   esi, dh", "mov     esi, [eax+esi*4+40h]", "rol     esi, 8", "xor     ecx, esi", "mov     esi, [esp+34h+var_30]", "shr     esi, 10h", "mov     edx, esi", "movzx   esi, dl", "mov     edx, [esp+34h+var_34]", "mov     esi, [eax+esi*4+40h]", "rol     esi, 10h", "xor     ecx, esi", "mov     esi, [esp+34h+var_30]", "shr     esi, 18h", "mov     ebx, [eax+esi*4+40h]", "movzx   esi, dh", "ror     ebx, 8", "xor     ebx, ebp", "mov     ebp, [eax+esi*4+40h]", "rol     ebp, 8", "xor     ebx, ebp", "mov     ebp, [esp+34h+var_2C]", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     esi, [eax+ebp*4+40h]", "rol     esi, 10h", "xor     ebx, esi", "mov     [esp+34h+var_20], ebx", "mov     ebx, [esp+34h+var_1C]", "movzx   esi, bl", "mov     esi, [eax+esi*4+40h]", "xor     esi, [edi+18h]", "mov     ebp, esi", "mov     esi, [esp+34h+var_24]", "shr     esi, 18h", "mov     esi, [eax+esi*4+40h]", "ror     esi, 8", "xor     esi, ebp", "mov     ebp, ecx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+34h+var_20]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     esi, ebp", "movzx   ebp, dh", "mov     edx, ebx", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     esi, ebp", "mov     [esp+34h+var_30], esi", "movzx   esi, byte ptr [esp+34h+var_24]", "mov     esi, [eax+esi*4+40h]", "xor     esi, [edi+14h]", "mov     ebp, esi", "mov     esi, ecx", "shr     esi, 18h", "mov     esi, [eax+esi*4+40h]", "ror     esi, 8", "xor     esi, ebp", "movzx   ebp, bh", "mov     ebx, [esp+34h+var_20]", "mov     ebp, [eax+ebp*4+40h]", "shr     ebx, 10h", "rol     ebp, 8", "xor     esi, ebp", "movzx   ebp, bl", "mov     ebx, [esp+34h+var_20]", "mov     ebp, [eax+ebp*4+40h]", "shr     ebx, 18h", "rol     ebp, 10h", "xor     esi, ebp", "mov     [esp+34h+var_2C], esi", "movzx   esi, cl", "movzx   ecx, ch", "mov     esi, [eax+esi*4+40h]", "xor     esi, [edi+10h]", "mov     ebp, esi", "mov     esi, [eax+ebx*4+40h]", "mov     ebx, [esp+34h+var_24]", "ror     esi, 8", "xor     esi, ebp", "movzx   ebp, bh", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     esi, ebp", "mov     ebp, edx", "shr     ebp, 10h", "mov     ebx, ebp", "movzx   ebp, bl", "movzx   ebx, byte ptr [esp+34h+var_20]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     esi, ebp", "mov     [esp+34h+var_34], esi", "mov     esi, [eax+ebx*4+40h]", "xor     esi, [edi+1Ch]", "shr     edx, 18h", "add     edi, 20h ; ' '", "mov     ebx, [eax+edx*4+40h]", "mov     edx, [esp+34h+var_24]", "ror     ebx, 8", "shr     edx, 10h", "xor     esi, ebx", "mov     ebx, [eax+ecx*4+40h]", "movzx   edx, dl", "mov     edx, [eax+edx*4+40h]", "rol     ebx, 8", "xor     ebx, esi", "rol     edx, 10h", "xor     ebx, edx", "cmp     [esp+34h+var_18], edi", "jnz     loc_36F28"], "preds": [225028, 225064], "succs": [225594, 225064]}, "225594": {"disasm": ["mov     eax, [esp+34h+var_14]", "mov     esi, ebx", "lea     edx, [eax+eax+4]"], "preds": [225064], "succs": [225604]}, "225604": {"disasm": ["mov     edi, [esp+34h+var_28]", "shl     edx, 4", "movzx   eax, byte ptr [esp+34h+var_30]", "mov     ecx, [esp+34h+var_2C]", "add     edx, [esp+34h+ctx]", "mov     ebx, [esp+34h+var_34]", "movzx   ebp, byte ptr [edi+eax*4+1F51h]", "mov     eax, ecx", "shr     eax, 18h", "xor     ebp, [edx+8]", "movzx   eax, byte ptr [edi+eax*4+1F51h]", "shl     eax, 18h", "xor     ebp, eax", "mov     eax, ebx", "shr     eax, 0Eh", "and     eax, 3FCh", "movzx   eax, byte ptr [eax+edi+1F51h]", "shl     eax, 10h", "xor     ebp, eax", "mov     eax, esi", "movzx   eax, ah", "movzx   eax, byte ptr [edi+eax*4+1F51h]", "shl     eax, 8", "xor     ebp, eax", "movzx   eax, byte ptr [esp+34h+var_2C]", "movzx   eax, byte ptr [edi+eax*4+1F51h]", "xor     eax, [edx+4]", "mov     ecx, eax", "mov     eax, ebx", "mov     ebx, [esp+34h+var_30]", "shr     eax, 18h", "movzx   eax, byte ptr [edi+eax*4+1F51h]", "shl     eax, 18h", "xor     eax, ecx", "movzx   ecx, bh", "movzx   ecx, byte ptr [edi+ecx*4+1F51h]", "shl     ecx, 8", "xor     eax, ecx", "mov     ecx, esi", "shr     ecx, 0Eh", "and     ecx, 3FCh", "movzx   ecx, byte ptr [ecx+edi+1F51h]", "shl     ecx, 10h", "xor     eax, ecx", "mov     ecx, esi", "movzx   ecx, cl", "movzx   ecx, byte ptr [edi+ecx*4+1F51h]", "xor     ecx, [edx+0Ch]", "mov     ebx, ecx", "mov     ecx, [esp+34h+var_30]", "shr     ecx, 18h", "movzx   ecx, byte ptr [edi+ecx*4+1F51h]", "shl     ecx, 18h", "xor     ecx, ebx", "mov     ebx, [esp+34h+var_34]", "movzx   ebx, bh", "movzx   ebx, byte ptr [edi+ebx*4+1F51h]", "shl     ebx, 8", "xor     ecx, ebx", "mov     ebx, [esp+34h+var_2C]", "shr     ebx, 0Eh", "and     ebx, 3FCh", "movzx   ebx, byte ptr [ebx+edi+1F51h]", "movzx   edi, byte ptr [esp+34h+var_34]", "shl     ebx, 10h", "xor     ecx, ebx", "mov     ebx, [esp+34h+var_28]", "movzx   ebx, byte ptr [ebx+edi*4+1F51h]", "mov     edi, [esp+34h+var_28]", "xor     ebx, [edx]", "shr     esi, 18h", "movzx   edx, byte ptr [edi+esi*4+1F51h]", "shl     edx, 18h", "xor     ebx, edx", "mov     edx, [esp+34h+var_2C]", "mov     esi, [esp+34h+var_28]", "movzx   edi, dh", "movzx   edx, byte ptr [esi+edi*4+1F51h]", "mov     edi, [esp+34h+var_30]", "shl     edx, 8", "shr     edi, 0Eh", "xor     ebx, edx", "and     edi, 3FCh", "movzx   edx, byte ptr [edi+esi+1F51h]", "shl     edx, 10h", "xor     ebx, edx", "mov     edx, [esp+34h+bx_0]", "mov     [edx+4], eax", "mov     eax, 40h ; '@'", "mov     [edx], ebx", "mov     [edx+8], ebp", "mov     [edx+0Ch], ecx", "add     esp, 24h", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [225594, 225984], "succs": []}, "225984": {"disasm": ["mov     edx, 2", "jmp     loc_37144"], "preds": [224672], "succs": [225604]}}, "do_decrypt": {"226064": {"disasm": ["call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 18h", "mov     eax, [esp+28h+ctx]", "mov     ebx, [esp+28h+ax_0]", "mov     edi, [esp+28h+ctx]", "mov     eax, [eax+1E0h]", "mov     ebp, [ebx]", "mov     esi, [ebx+0Ch]", "mov     ecx, eax", "shl     ecx, 4", "xor     ebp, [ecx+edi+0F0h]", "mov     ecx, eax", "shl     ecx, 4", "add     ecx, edi", "mov     edi, [ebx+4]", "xor     edi, [ecx+0F4h]", "xor     esi, [ecx+0FCh]", "mov     [esp+28h+var_28], ebp", "mov     [esp+28h+var_20], edi", "mov     edi, [ebx+8]", "xor     edi, [ecx+0F8h]", "cmp     eax, 2", "mov     [esp+28h+var_24], edi", "jle     loc_37840"], "preds": [], "succs": [226168, 227392]}, "226168": {"disasm": ["mov     ebx, [esp+28h+ctx]", "lea     ecx, [eax+0Dh]", "sub     eax, 3", "mov     edi, [esp+28h+ctx]", "shl     ecx, 4", "shr     eax, 1", "shl     eax, 5", "add     edi, ecx", "lea     ecx, [ebx+ecx-20h]", "mov     ebx, esi", "sub     ecx, eax", "mov     [esp+28h+var_14], ecx", "lea     eax, (dec_tables.counter_head - 0F6E70h)[edx]", "lea     esi, [esi+0]"], "preds": [226064], "succs": [226216]}, "226216": {"disasm": ["movzx   edx, byte ptr [esp+28h+var_28]", "mov     ebp, [esp+28h+var_20]", "mov     esi, [esp+28h+var_24]", "mov     edx, [eax+edx*4+40h]", "xor     edx, [edi+10h]", "mov     ecx, edx", "mov     edx, ebp", "shr     edx, 18h", "mov     edx, [eax+edx*4+40h]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, esi", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, bh", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, [edi+14h]", "mov     [esp+28h+var_20], edx", "mov     edx, ebp", "movzx   edx, dl", "mov     edx, [eax+edx*4+40h]", "xor     ecx, edx", "mov     edx, esi", "shr     edx, 18h", "mov     edx, [eax+edx*4+40h]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, [esp+28h+var_28]", "movzx   ecx, ch", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, ebx", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, byte ptr [esp+28h+var_24]", "mov     [esp+28h+var_1C], edx", "mov     ecx, [eax+ecx*4+40h]", "xor     ecx, [edi+18h]", "mov     esi, ecx", "mov     ecx, ebx", "movzx   ebx, bl", "shr     ecx, 18h", "mov     ecx, [eax+ecx*4+40h]", "ror     ecx, 8", "xor     ecx, esi", "mov     esi, [esp+28h+var_28]", "shr     esi, 10h", "mov     edx, esi", "movzx   esi, dl", "mov     edx, ebp", "mov     ebp, [eax+ebx*4+40h]", "mov     esi, [eax+esi*4+40h]", "mov     ebx, [esp+28h+var_28]", "xor     ebp, [edi+1Ch]", "rol     esi, 10h", "xor     ecx, esi", "movzx   esi, dh", "shr     ebx, 18h", "mov     esi, [eax+esi*4+40h]", "rol     esi, 8", "xor     ecx, esi", "mov     esi, ebp", "mov     ebp, [eax+ebx*4+40h]", "mov     ebx, ebp", "ror     ebx, 8", "xor     esi, ebx", "mov     ebx, edx", "mov     edx, [esp+28h+var_24]", "shr     ebx, 10h", "mov     ebp, esi", "movzx   esi, bl", "mov     ebx, [eax+esi*4+40h]", "movzx   esi, dh", "mov     esi, [eax+esi*4+40h]", "rol     ebx, 10h", "xor     ebx, ebp", "rol     esi, 8", "xor     ebx, esi", "mov     [esp+28h+var_18], ebx", "mov     ebx, [esp+28h+var_20]", "movzx   esi, bl", "mov     esi, [eax+esi*4+40h]", "xor     esi, [edi]", "mov     ebp, esi", "mov     esi, [esp+28h+var_1C]", "shr     esi, 18h", "mov     esi, [eax+esi*4+40h]", "ror     esi, 8", "xor     esi, ebp", "mov     ebp, ecx", "shr     ebp, 10h", "mov     edx, ebp", "movzx   ebp, dl", "mov     edx, [esp+28h+var_18]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     esi, ebp", "movzx   ebp, dh", "mov     edx, ebx", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     esi, ebp", "mov     [esp+28h+var_28], esi", "movzx   esi, byte ptr [esp+28h+var_1C]", "mov     esi, [eax+esi*4+40h]", "xor     esi, [edi+4]", "mov     ebp, esi", "mov     esi, ecx", "shr     esi, 18h", "mov     esi, [eax+esi*4+40h]", "ror     esi, 8", "xor     esi, ebp", "movzx   ebp, bh", "mov     ebx, [esp+28h+var_18]", "mov     ebp, [eax+ebp*4+40h]", "shr     ebx, 10h", "rol     ebp, 8", "xor     esi, ebp", "movzx   ebp, bl", "mov     ebx, [esp+28h+var_18]", "mov     ebp, [eax+ebp*4+40h]", "shr     ebx, 18h", "rol     ebp, 10h", "xor     esi, ebp", "mov     [esp+28h+var_20], esi", "movzx   esi, cl", "movzx   ecx, ch", "mov     esi, [eax+esi*4+40h]", "xor     esi, [edi+8]", "mov     ebp, esi", "mov     esi, [eax+ebx*4+40h]", "ror     esi, 8", "xor     esi, ebp", "mov     ebp, edx", "shr     ebp, 10h", "mov     ebx, ebp", "movzx   ebp, bl", "mov     ebx, [esp+28h+var_1C]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 10h", "xor     esi, ebp", "movzx   ebp, bh", "movzx   ebx, byte ptr [esp+28h+var_18]", "mov     ebp, [eax+ebp*4+40h]", "rol     ebp, 8", "xor     esi, ebp", "mov     [esp+28h+var_24], esi", "mov     esi, [eax+ebx*4+40h]", "xor     esi, [edi+0Ch]", "shr     edx, 18h", "sub     edi, 20h ; ' '", "mov     ebx, [eax+edx*4+40h]", "mov     edx, [esp+28h+var_1C]", "ror     ebx, 8", "shr     edx, 10h", "xor     esi, ebx", "movzx   edx, dl", "mov     ebx, [eax+edx*4+40h]", "mov     edx, [eax+ecx*4+40h]", "rol     ebx, 10h", "xor     ebx, esi", "rol     edx, 8", "xor     ebx, edx", "cmp     [esp+28h+var_14], edi", "jnz     loc_373A8"], "preds": [226168, 226216], "succs": [226747, 226216]}, "226747": {"disasm": ["mov     esi, ebx"], "preds": [226216], "succs": [226749]}, "226749": {"disasm": ["mov     ebx, [esp+28h+ctx]", "movzx   edx, byte ptr [esp+28h+var_28]", "mov     ebp, [esp+28h+var_20]", "mov     edi, [esp+28h+var_24]", "mov     ecx, [ebx+100h]", "mov     ebx, esi", "mov     edx, [eax+edx*4+40h]", "xor     ecx, edx", "mov     edx, ebp", "shr     edx, 18h", "mov     edx, [eax+edx*4+40h]", "ror     edx, 8", "xor     edx, ecx", "mov     ecx, edi", "shr     ecx, 10h", "movzx   ecx, cl", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 10h", "xor     edx, ecx", "movzx   ecx, bh", "mov     ebx, ebp", "mov     ecx, [eax+ecx*4+40h]", "rol     ecx, 8", "xor     edx, ecx", "mov     ecx, [esp+28h+ctx]", "mov     [esp+28h+var_24], edx", "movzx   edx, bl", "mov     ebx, [eax+edx*4+40h]", "xor     ebx, [ecx+104h]", "mov     ecx, edi", "shr     ecx, 18h", "mov     edx, [eax+ecx*4+40h]", "mov     ecx, esi", "shr     ecx, 10h", "ror     edx, 8", "xor     ebx, edx", "mov     edx, [esp+28h+var_28]", "movzx   edx, dh", "mov     edx, [eax+edx*4+40h]", "rol     edx, 8", "xor     ebx, edx", "movzx   edx, cl", "mov     edx, [eax+edx*4+40h]", "rol     edx, 10h", "xor     ebx, edx", "mov     [esp+28h+var_1C], ebx", "mov     ebx, edi", "mov     edi, [esp+28h+ctx]", "movzx   edx, bl", "mov     ecx, [eax+edx*4+40h]", "xor     ecx, [edi+108h]", "mov     edi, esi", "shr     edi, 18h", "mov     edx, [eax+edi*4+40h]", "mov     edi, [esp+28h+var_28]", "ror     edx, 8", "xor     ecx, edx", "mov     edx, edi", "shr     edi, 18h", "shr     edx, 10h", "movzx   edx, dl", "mov     edx, [eax+edx*4+40h]", "rol     edx, 10h", "xor     ecx, edx", "mov     edx, ebp", "movzx   edx, dh", "mov     edx, [eax+edx*4+40h]", "rol     edx, 8", "xor     edx, ecx", "mov     ecx, esi", "movzx   esi, cl", "mov     ecx, [esp+28h+ctx]", "mov     esi, [eax+esi*4+40h]", "xor     esi, [ecx+10Ch]", "mov     ecx, [eax+edi*4+40h]", "ror     ecx, 8", "xor     esi, ecx", "mov     ecx, [esp+28h+var_20]", "shr     ecx, 10h", "movzx   edi, cl", "mov     ecx, [eax+edi*4+40h]", "movzx   edi, bh", "rol     ecx, 10h", "xor     ecx, esi", "mov     esi, [eax+edi*4+40h]", "rol     esi, 8", "xor     ecx, esi", "movzx   esi, byte ptr [esp+28h+var_1C]", "mov     ebp, [esp+28h+ctx]", "mov     ebx, [esp+28h+var_24]", "movzx   esi, byte ptr [esi+eax+440h]", "mov     edi, [ebp+0F4h]", "xor     edi, esi", "mov     esi, edx", "shr     esi, 18h", "movzx   esi, byte ptr [esi+eax+440h]", "shl     esi, 18h", "xor     esi, edi", "movzx   edi, bh", "movzx   edi, byte ptr [edi+eax+440h]", "shl     edi, 8", "xor     esi, edi", "mov     edi, ecx", "shr     edi, 10h", "mov     ebx, edi", "movzx   edi, bl", "movzx   edi, byte ptr [edi+eax+440h]", "shl     edi, 10h", "xor     esi, edi", "mov     edi, [ebp+0F8h]", "mov     [esp+28h+var_28], esi", "movzx   esi, dl", "mov     ebp, [ebp+0FCh]", "movzx   esi, byte ptr [esi+eax+440h]", "xor     edi, esi", "mov     esi, ecx", "shr     esi, 18h", "movzx   esi, byte ptr [esi+eax+440h]", "shl     esi, 18h", "xor     esi, edi", "mov     edi, [esp+28h+var_24]", "shr     edi, 10h", "mov     ebx, edi", "movzx   edi, bl", "mov     ebx, [esp+28h+var_1C]", "movzx   edi, byte ptr [edi+eax+440h]", "shl     edi, 10h", "xor     esi, edi", "movzx   edi, bh", "movzx   edi, byte ptr [edi+eax+440h]", "shl     edi, 8", "xor     esi, edi", "movzx   edi, cl", "movzx   ecx, ch", "movzx   edi, byte ptr [edi+eax+440h]", "xor     ebp, edi", "mov     edi, [esp+28h+var_24]", "shr     edi, 18h", "movzx   edi, byte ptr [edi+eax+440h]", "shl     edi, 18h", "xor     edi, ebp", "mov     ebp, [esp+28h+var_1C]", "shr     ebp, 10h", "mov     ebx, ebp", "movzx   ebp, bl", "mov     ebx, [esp+28h+ctx]", "movzx   ebp, byte ptr [ebp+eax+440h]", "shl     ebp, 10h", "xor     edi, ebp", "movzx   ebp, dh", "movzx   ebp, byte ptr [ebp+eax+440h]", "shl     ebp, 8", "xor     edi, ebp", "movzx   ebp, byte ptr [esp+28h+var_24]", "movzx   ebp, byte ptr [ebp+eax+440h]", "xor     ebp, [ebx+0F0h]", "mov     ebx, [esp+28h+var_1C]", "shr     ebx, 18h", "shr     edx, 10h", "movzx   ebx, byte ptr [ebx+eax+440h]", "movzx   edx, dl", "shl     ebx, 18h", "xor     ebp, ebx", "movzx   ebx, byte ptr (gcm_table.R+1F0h - 0F6E70h)[edx+eax]", "shl     ebx, 10h", "xor     ebp, ebx", "movzx   ebx, byte ptr [ecx+eax+440h]", "shl     ebx, 8", "xor     ebp, ebx", "mov     ebx, [esp+28h+bx_0]", "mov     [ebx], ebp", "mov     eax, [esp+28h+var_28]", "mov     [ebx+8], esi", "mov     [ebx+0Ch], edi", "mov     [ebx+4], eax", "add     esp, 18h", "mov     eax, 40h ; '@'", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [226747, 227392], "succs": []}, "227392": {"disasm": ["lea     eax, (dec_tables.counter_head - 0F6E70h)[edx]", "jmp     loc_375BD"], "preds": [226064], "succs": [226749]}}, "prefetch_enc": {"231264": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, dword ptr (enc_tables.counter_head - 0F6E70h)[eax]", "add     edx, 1", "mov     dword ptr (enc_tables.counter_head - 0F6E70h)[eax], edx", "mov     edx, (enc_tables.counter_tail - 0F6E70h)[eax]", "add     edx, 1", "mov     (enc_tables.counter_tail - 0F6E70h)[eax], edx", "movzx   edx, byte ptr (enc_tables.counter_head - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.cacheline_align+1Ch - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+20h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+40h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+60h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+80h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+0A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+0C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+0E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+100h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+120h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+140h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+160h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+180h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+1A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+1C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+1E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+200h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+220h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+240h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+260h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+280h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+2A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+2C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+2E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+300h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+320h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+340h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+360h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+380h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+3A0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+3C0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.T+3E0h - 0F6E70h)[eax]", "movzx   edx, byte ptr (enc_tables.counter_tail - 0F6E70h)[eax]", "movzx   eax, byte ptr (enc_tables.counter_tail+3 - 0F6E70h)[eax]", "retn"], "preds": [], "succs": []}}, "gen_k": {"352448": {"disasm": ["push    ebp", "push    edi", "mov     edi, p_0", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "push    0; nlimbs", "call    _gcry_mpi_alloc_secure", "pop     ebp", "push    dword ptr [p_0+4]; nlimbs", "mov     esi, eax", "call    _gcry_mpi_alloc", "mov     [esp+3Ch+rndbuf], p_0", "mov     [esp+3Ch+a], p_0; a", "mov     ebp, eax", "call    _gcry_mpi_copy", "mov     p_0, eax", "pop     p_1", "push    [esp+38h+rndbuf]; a", "call    _gcry_mpi_get_nbits", "mov     [esp+3Ch+a], 1; mask", "mov     [esp+3Ch+nbits], eax", "add     nbits_0, 7", "shr     eax, 3", "mov     [esp+3Ch+nbytes], eax", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jnz     loc_5634B"], "preds": [], "succs": [352549, 353099]}, "352549": {"disasm": ["sub     esp, 4", "push    1; v", "push    [esp+34h+rndbuf]; u", "push    p_1; w", "call    _gcry_mpi_sub_ui", "lea     eax, (aPkElg - 0F6E70h)[ebx]; \"pk_elg\"", "add     esp, 10h", "cmp     [esp+2Ch+nbits], 1Fh", "mov     [esp+2Ch+rndbuf], 0", "mov     [esp+2Ch+var_20], eax", "setbe   byte ptr [esp+2Ch+nbits]"], "preds": [352448, 353099], "succs": [352594]}, "352594": {"disasm": ["mov     ecx, [esp+2Ch+rndbuf]", "test    ecx, ecx", "jz      loc_56250"], "preds": [352549, 352768, 352789, 352888, 352909, 352923], "succs": [352605, 352848]}, "352605": {"disasm": ["cmp     byte ptr [esp+2Ch+nbits], 0", "jnz     loc_56250"], "preds": [352594, 352803], "succs": [352616, 352848]}, "352616": {"disasm": ["sub     esp, 8", "push    1; level", "push    4; nbytes", "call    _gcry_random_bytes_secure", "mov     ecx, [esp+3Ch+rndbuf]", "mov     edx, [pp]", "mov     [ecx], edx", "mov     [esp+3Ch+a], pp; p", "call    _gcry_free", "add     esp, 10h"], "preds": [352605], "succs": [352647]}, "352647": {"disasm": ["push    0; sign", "push    [esp+30h+nbytes]; nbytes", "push    [esp+34h+rndbuf]; buffer_arg", "push    k; a", "call    _gcry_mpi_set_buffer", "add     esp, 10h", "jmp     short loc_561EF"], "preds": [352616, 352848], "succs": [352751]}, "352672": {"disasm": ["sub     esp, 8", "push    0; v", "push    k; u", "call    _gcry_mpi_cmp_ui", "add     esp, 10h", "test    eax, eax", "jle     loc_56278"], "preds": [352751], "succs": [352694, 352888]}, "352694": {"disasm": ["sub     esp, 4", "push    p_1; xb", "push    k; xa", "push    temp; g", "call    _gcry_mpi_gcd", "add     esp, 10h", "test    eax, eax", "jnz     found"], "preds": [352672], "succs": [352716, 352960]}, "352716": {"disasm": ["sub     esp, 4", "push    1; v", "push    k; u", "push    k; w", "call    _gcry_mpi_add_ui", "mov     [esp+3Ch+a], 1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jnz     loc_56320"], "preds": [352694], "succs": [352751, 353056]}, "352751": {"disasm": ["sub     esp, 8", "push    p_1; v", "push    k; u", "call    _gcry_mpi_cmp", "add     esp, 10h", "test    eax, eax", "js      short loc_561A0"], "preds": [352647, 352716, 353056, 353070], "succs": [352672, 352768]}, "352768": {"disasm": ["sub     esp, 0Ch", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      loc_56152"], "preds": [352751], "succs": [352594, 352789]}, "352789": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0F6E70h)[ebx]", "test    eax, eax", "jz      loc_56152"], "preds": [352768], "succs": [352594, 352803]}, "352803": {"disasm": ["sub     esp, 0Ch", "push    0", "push    0", "push    2Bh ; '+'", "push    [esp+44h+var_20]", "push    ds:(progress_cb_data_1 - 0F6E70h)[ebx]", "call    eax", "mov     ecx, [esp+4Ch+rndbuf]", "add     esp, 20h", "test    rndbuf_0, rndbuf_0", "jnz     loc_5615D"], "preds": [352789], "succs": [352605, 352839]}, "352839": {"disasm": ["lea     k, [k+0]", "xchg    ax, ax"], "preds": [352803], "succs": [352848]}, "352848": {"disasm": ["sub     esp, 0Ch", "push    [esp+38h+rndbuf]; p", "call    _gcry_free", "pop     eax", "pop     edx", "push    1; level", "push    [esp+38h+nbytes]; nbytes", "call    _gcry_random_bytes_secure", "mov     [esp+3Ch+rndbuf], eax", "add     esp, 10h", "jmp     loc_56187"], "preds": [352594, 352605, 352839], "succs": [352647]}, "352888": {"disasm": ["sub     esp, 0Ch", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      loc_56152"], "preds": [352672], "succs": [352594, 352909]}, "352909": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0F6E70h)[ebx]", "test    eax, eax", "jz      loc_56152"], "preds": [352888], "succs": [352594, 352923]}, "352923": {"disasm": ["sub     esp, 0Ch", "push    0", "push    0", "push    2Dh ; '-'", "push    [esp+44h+var_20]", "push    ds:(progress_cb_data_1 - 0F6E70h)[ebx]", "call    eax", "add     esp, 20h", "jmp     loc_56152"], "preds": [352909], "succs": [352594]}, "352960": {"disasm": ["sub     esp, 0Ch", "push    [esp+38h+rndbuf]; p", "call    _gcry_free", "mov     [esp+3Ch+a], 1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      short loc_56304"], "preds": [352694], "succs": [352991, 353028]}, "352991": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0F6E70h)[ebx]", "test    eax, eax", "jz      short loc_56304"], "preds": [352960], "succs": [353001, 353028]}, "353001": {"disasm": ["lea     edx, (aPkElg - 0F6E70h)[ebx]; \"pk_elg\"", "sub     esp, 0Ch", "push    0", "push    0", "push    0Ah", "push    edx", "push    ds:(progress_cb_data_1 - 0F6E70h)[ebx]", "call    eax", "add     esp, 20h"], "preds": [352991], "succs": [353028]}, "353028": {"disasm": ["sub     esp, 0Ch", "push    p_1; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+a], temp; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "mov     eax, k", "pop     ebx", "pop     k", "pop     p_1", "pop     temp", "retn"], "preds": [352960, 352991, 353001], "succs": []}, "353056": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0F6E70h)[ebx]", "test    eax, eax", "jz      loc_561EF"], "preds": [352716], "succs": [352751, 353070]}, "353070": {"disasm": ["sub     esp, 0Ch", "push    0", "push    0", "push    2Eh ; '.'", "push    [esp+44h+var_20]", "push    ds:(progress_cb_data_1 - 0F6E70h)[ebx]", "call    eax", "add     esp, 20h", "jmp     loc_561EF"], "preds": [353056], "succs": [352751]}, "353099": {"disasm": ["lea     eax, (aChoosingARando_1 - 0F6E70h)[ebx]; \"choosing a random k\\n\"", "sub     esp, 0Ch", "push    eax; fmt", "call    _gcry_log_debug", "add     esp, 10h", "jmp     loc_56125"], "preds": [352448], "succs": [352549]}}, "sign_0": {"353136": {"disasm": ["push    ebp", "mov     ebp, a", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     [esp+38h+input], input_0", "mov     [esp+38h+b], b_0", "push    dword ptr [a+4]; nlimbs", "call    _gcry_mpi_alloc", "mov     edi, eax", "pop     t", "push    dword ptr [a+4]; nlimbs", "call    _gcry_mpi_alloc", "mov     [esp+3Ch+inv], eax", "pop     edx", "mov     esi, [esp+38h+skey]", "push    dword ptr [esi]; a", "call    _gcry_mpi_copy", "add     esp, 0Ch", "push    1; v", "mov     esi, eax", "push    p_1; u", "push    p_1; w", "call    _gcry_mpi_sub_ui", "mov     eax, [esp+3Ch+skey]", "mov     eax, [eax]; p", "call    gen_k", "mov     edx, [esp+3Ch+skey]", "push    dword ptr [edx]; mod", "mov     [esp+40h+k], k_0", "push    k_0; expo", "mov     ecx, [esp+44h+skey]", "push    dword ptr [ecx+4]; base", "push    a; res", "call    _gcry_mpi_powm", "add     esp, 1Ch", "push    a; v", "mov     edx, [esp+34h+skey]", "push    dword ptr [edx+0Ch]; u", "push    t; w", "call    _gcry_mpi_mul", "push    p_1; m", "push    t; v", "push    [esp+44h+input]; u", "push    t; w", "call    _gcry_mpi_subm", "add     esp, 1Ch", "push    p_1; n", "push    [esp+34h+k]; a", "mov     a, [esp+38h+inv]", "push    ebp; x", "call    _gcry_mpi_invm", "push    p_1; m", "push    ebp; v", "push    t; u", "push    [esp+48h+b]; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    [esp+38h+k]; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], t; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], ebp; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], p_1; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "pop     ebx", "pop     p_1", "pop     t", "pop     ebp", "retn"], "preds": [], "succs": []}}, "do_encrypt_3": {"354144": {"disasm": ["push    ebp", "mov     ebp, b", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+pkey]", "mov     [esp+2Ch+a], a_0", "mov     [esp+2Ch+input], input_0", "mov     a_0, [esi]; p", "call    gen_k", "push    dword ptr [esi]; mod", "mov     edi, eax", "push    k; expo", "push    dword ptr [esi+4]; base", "push    [esp+38h+a]; res", "call    _gcry_mpi_powm", "push    dword ptr [esi]; mod", "push    k; expo", "push    dword ptr [esi+8]; base", "push    b; res", "call    _gcry_mpi_powm", "add     esp, 20h", "push    dword ptr [esi]; m", "push    [esp+30h+input]; v", "push    b; u", "push    b; w", "call    _gcry_mpi_mulm", "mov     [esp+3Ch+var_3C], k; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     k", "pop     b", "retn"], "preds": [], "succs": []}}, "decrypt": {"355952": {"disasm": ["push    ebp", "mov     ebp, a_0", "push    edi", "mov     edi, b_0", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 38h", "mov     a_0, [esp+48h+arg_0]", "mov     [esp+48h+output], output_0", "push    dword ptr [edx]; a", "call    _gcry_mpi_get_nbits", "mov     esi, eax", "mov     [esp+4Ch+var_4C], a_0; a", "mov     [esp+4Ch+a], a_0", "call    _gcry_mpi_normalize", "mov     [esp+4Ch+var_4C], b_0; a", "mov     [esp+4Ch+b], b_0", "call    _gcry_mpi_normalize", "mov     [esp+4Ch+var_4C], nbits_0; nbits", "call    _gcry_mpi_snew", "mov     [esp+4Ch+var_4C], nbits_0; nbits", "mov     [esp+4Ch+t1], eax", "call    _gcry_mpi_snew", "mov     [esp+4Ch+var_4C], nbits_0; nbits", "mov     b_0, eax", "call    _gcry_mpi_new", "mov     [esp+4Ch+var_4C], nbits_0; nbits", "mov     [esp+4Ch+r], eax", "call    _gcry_mpi_new", "mov     [esp+4Ch+var_4C], nbits_0; nbits", "mov     [esp+4Ch+r1], eax", "call    _gcry_mpi_new", "mov     [esp+4Ch+var_4C], nbits_0; nbits", "mov     [esp+4Ch+h], eax", "call    _gcry_mpi_snew", "add     esp, 0Ch", "push    0; level", "mov     a_0, eax", "push    nbits_0; nbits", "push    [esp+48h+r]; w", "call    _gcry_mpi_randomize", "add     esp, 0Ch", "push    0; level", "push    nbits_0; nbits", "sub     nbits_0, 1", "push    [esp+48h+r1]; w", "call    _gcry_mpi_randomize", "pop     eax", "pop     edx", "push    esi; n", "mov     esi, [esp+48h+r1]", "push    esi; a", "call    _gcry_mpi_set_highbit", "add     esp, 0Ch", "push    1; v", "mov     ecx, [esp+44h+arg_0]", "push    dword ptr [ecx]; u", "push    [esp+48h+h]; w", "call    _gcry_mpi_sub_ui", "add     esp, 0Ch", "mov     [esp+40h+r1], esi", "push    esi; v", "push    [esp+44h+h]; u", "push    x_blind; w", "call    _gcry_mpi_mul", "add     esp, 0Ch", "push    x_blind; v", "mov     eax, [esp+44h+arg_4]", "push    dword ptr [eax]; u", "push    x_blind; w", "call    _gcry_mpi_add", "mov     edx, [esp+4Ch+arg_0]", "push    dword ptr [edx]; mod", "push    x_blind; expo", "push    [esp+54h+r]; base", "mov     esi, [esp+58h+t1]", "push    esi; res", "call    _gcry_mpi_powm", "mov     ecx, [esp+5Ch+arg_0]", "add     esp, 20h", "push    dword ptr [ecx]; m", "push    [esp+40h+r]; v", "push    [esp+44h+a]; u", "push    t2; w", "call    _gcry_mpi_mulm", "mov     edx, [esp+4Ch+arg_0]", "push    dword ptr [edx]; mod", "push    x_blind; expo", "push    t2; base", "push    t2; res", "call    _gcry_mpi_powm", "mov     ecx, [esp+5Ch+arg_0]", "add     esp, 1Ch", "push    dword ptr [ecx]; n", "push    t2; a", "push    t2; x", "call    _gcry_mpi_invm", "mov     edx, [esp+4Ch+arg_0]", "push    dword ptr [edx]; m", "push    t2; v", "push    esi; u", "push    esi; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    x_blind; a", "call    _gcry_mpi_free", "pop     ecx", "push    [esp+48h+h]; a", "call    _gcry_mpi_free", "pop     x_blind", "push    [esp+48h+r1]; a", "call    _gcry_mpi_free", "pop     eax", "push    [esp+48h+r]; a", "call    _gcry_mpi_free", "mov     [esp+4Ch+var_4C], t2; a", "call    _gcry_mpi_free", "mov     ecx, [esp+4Ch+arg_0]", "push    dword ptr [ecx]; m", "push    esi; v", "push    [esp+54h+b]; u", "push    [esp+58h+output]; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    esi; a", "call    _gcry_mpi_free", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     t2", "pop     ebp", "retn"], "preds": [], "succs": []}}}