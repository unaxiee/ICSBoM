{"ghash_internal": {"109872": {"disasm": ["call func", "add eax (func func - imm)", "push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov esi [esp+imm]", "mov edx [esp+imm]", "mov [esp+imm] esi", "mov esi [esp+imm]", "mov [esp+imm] esi", "mov esi large imm", "mov [esp+imm] esi", "xor esi esi", "mov ecx dword ptr (func - imm)[eax]", "add ecx imm", "mov dword ptr (func - imm)[eax] ecx", "mov ecx (func - imm)[eax]", "add ecx imm", "mov (func - imm)[eax] ecx", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr [edx+imm]", "movzx ecx byte ptr (func - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr (func - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr imm - imm)[eax]", "movzx ecx byte ptr (func - imm)[eax]", "movzx ecx byte ptr (func - imm)[eax]", "mov ecx [esp+imm]", "test ecx ecx", "jz addr"], "preds": [], "succs": [110223, 110603], "hash": "1e75c7a8b3cb08896dcd51928d5a04f8"}, "110223": {"disasm": ["lea esi [edx+imm]", "mov [esp+imm] esi", "lea esi [esp+imm]", "mov [esp+imm] esi", "lea eax (func - imm)[eax]", "lea esi [esp+imm]", "mov [esp+imm] eax", "mov [esp+imm] esi", "lea esi [esi+imm]", "nop"], "preds": [109872], "succs": [110264], "hash": "6780120fed189c29dfb442dfc6950ae4"}, "110264": {"disasm": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov ebx [esp+imm]", "movq xmm0 ds:(func - imm)[eax]", "movq xmm1 qword ptr [esi]", "movq xmm2 qword ptr [eax+imm]", "pxor xmm1 xmm0", "movq xmm0 qword ptr [esi+imm]", "movq [esp+imm] xmm1", "pxor xmm0 xmm2", "movdqa xmm1 xmm0", "movq qword ptr [esp+imm] xmm0", "psrlq xmm1 imm", "movd esi xmm1", "movd eax xmm1", "shr esi imm", "shr eax imm", "mov ecx esi", "and esi 0F0h", "movzx eax al", "and ecx imm", "add esi ebx", "add ecx imm", "shl ecx imm", "add ecx ebx", "mov edx [ecx]", "xor edx [esi]", "mov ebx [ecx+imm]", "xor ebx [esi+imm]", "mov [esp+imm] edx", "mov edx [ecx+imm]", "mov ecx [ecx+imm]", "xor ecx [esi+imm]", "xor edx [esi+imm]", "mov esi ecx", "mov ecx [esp+imm]", "mov [esp+imm] ecx", "jmp short addr"], "preds": [110223, 110550], "succs": [110410], "hash": "8cd291a46cf8d5932abbfffdd00e044c"}, "110400": {"disasm": ["movzx eax byte ptr [edi]", "sub edi imm", "mov [esp+imm] edi"], "preds": [110410], "succs": [110410], "hash": "907f4f4a3143b5d25a91c74c317a7116"}, "110410": {"disasm": ["mov edi [esp+imm]", "mov ecx eax", "and eax 0F0h", "mov ebp ebx", "shr ebp imm", "and ecx imm", "shl ebx imm", "add ecx imm", "shl ecx imm", "add eax edi", "add ecx edi", "mov edi [esp+imm]", "shl edi imm", "xor edi ebp", "mov ebp edx", "shl edx imm", "xor edi [eax+imm]", "shr ebp imm", "xor ebx ebp", "mov ebp [eax+imm]", "mov [esp+imm] edi", "xor ebp ebx", "mov ebx esi", "shr ebx imm", "xor edx ebx", "xor edx [eax+imm]", "mov ebx esi", "movzx esi bl", "mov ebx [esp+imm]", "xor ebx [ecx+imm]", "mov edi edx", "mov edx [esp+imm]", "movzx edx word ptr [edx+imm]", "mov esi [ecx+imm]", "shl edx imm", "xor edx dword ptr ds:(func - imm)[eax]", "mov eax [esp+imm]", "xor esi edi", "mov edi [esp+imm]", "shr eax imm", "xor edx eax", "xor edx [ecx]", "mov [esp+imm] edx", "mov edx [ecx+imm]", "xor edx ebp", "cmp [esp+imm] edi", "jnz addr"], "preds": [110264, 110400], "succs": [110400, 110550], "hash": "b4564c0e83e2c5fc0557b888e74221fe"}, "110550": {"disasm": ["mov edi [esp+imm]", "bswap ebx", "bswap edx", "mov eax [esp+imm]", "add [esp+imm] imm", "sub [esp+imm] imm", "bswap eax", "mov [edi] eax", "mov eax esi", "bswap eax", "mov [edi+imm] ebx", "mov [edi+imm] edx", "mov [edi+imm] eax", "jnz addr"], "preds": [110410], "succs": [110264, 110595], "hash": "6e61f273c9e554f4dcd36563af1971af"}, "110595": {"disasm": ["mov [esp+imm] imm"], "preds": [110550], "succs": [110603], "hash": "766c49a8501cb99e22f7c0527e6e955e"}, "110603": {"disasm": ["mov eax [esp+imm]", "xor eax large imm", "jnz short addr"], "preds": [109872, 110595], "succs": [110616, 110628], "hash": "9aea1e059c0bed2a677251c6be7a605f"}, "110616": {"disasm": ["mov eax [esp+imm]", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "preds": [110603], "succs": [], "hash": "e206c17409f7028f9d34f3efa071be55"}, "110628": {"disasm": ["call func"], "preds": [110603], "succs": [], "hash": "7ad0e4e1e151c6d0843d3ed0fc7463f9"}}, "_gcry_md_block_write": {"178096": {"disasm": ["push ebp", "mov eax imm", "push edi", "push esi", "push ebx", "call func", "add ebx (func func - imm)", "sub esp imm", "mov ebp [esp+imm]", "mov edi [esp+imm]", "mov ecx [hd_0+imm]", "shl eax cl", "mov [esp+imm] ecx", "mov [esp+imm] eax", "cmp func imm", "ja addr"], "preds": [], "succs": [178153, 178656], "hash": "14c3b6684724b126a573bb4dc153d0a2"}, "178153": {"disasm": ["mov func [hd_0+imm]", "test eax eax", "jz addr"], "preds": [178096], "succs": [178167, 178550], "hash": "fbc09ab776fbafd5084a1ebce6e3643b"}, "178167": {"disasm": ["mov func [hd_0+imm]", "cmp ecx [esp+imm]", "ja addr"], "preds": [178153], "succs": [178182, 178560], "hash": "2055183f22a75c5bc2591bc1e9b46c14"}, "178182": {"disasm": ["test ecx ecx", "jz addr"], "preds": [178167], "succs": [178190, 178649], "hash": "2a3bc3b5f3926d283d89d63d86f80c8c"}, "178190": {"disasm": ["mov eax ecx", "jmp short addr"], "preds": [178182], "succs": [178265], "hash": "f3018bdaab23b6babbc93d8f8f631b39"}, "178200": {"disasm": ["mov esi [esp+imm]", "sub esi eax", "cmp esi copylen", "cmova esi copylen", "test copylen copylen", "jz addr"], "preds": [178265], "succs": [178218, 178361], "hash": "19fd91e28c7b724582953545a9f2531f"}, "178218": {"disasm": ["sub esp imm", "add eax func", "sub func copylen", "push copylen", "push [esp+imm]", "push eax", "call func", "mov eax [hd_0+imm]", "add [esp+imm] copylen", "add esp imm", "add eax copylen", "mov [hd_0+imm] eax", "test eax eax", "jz addr"], "preds": [178200], "succs": [178265, 178649], "hash": "aeac4429c7c4e85b8318bf6e38ad61e5"}, "178265": {"disasm": ["cmp [esp+imm] eax", "jnz short addr"], "preds": [178190, 178218], "succs": [178200, 178270], "hash": "bee4185899d4d6dbe4080941434e5321"}, "178270": {"disasm": ["sub esp imm", "push imm", "push func", "push func", "call dword ptr [hd_0+imm]", "movq xmm1 qword ptr [hd_0+imm]", "add esp imm", "mov dword ptr [hd_0+imm] imm", "movdqa xmm0 ds:(func - imm)[ebx]", "mov esi eax", "paddq xmm1 xmm0", "movdqa xmm0 xmm1", "movd ecx xmm1", "movq qword ptr [hd_0+imm] xmm1", "psrlq xmm0 imm", "movd nburn xmm0", "or eax ecx", "jnz short addr"], "preds": [178265], "succs": [178347, 178361], "hash": "77455353352761c4572afd92ea494554"}, "178347": {"disasm": ["add dword ptr [hd_0+imm] imm", "adc dword ptr [hd_0+imm] imm"], "preds": [178270], "succs": [178361], "hash": "ffb4dc1321b484643ee5db55045c6a94"}, "178361": {"disasm": ["test func func", "jz addr"], "preds": [178200, 178270, 178347, 178560, 178649], "succs": [178369, 178550], "hash": "f55f31f840081ce9bfe6b0bc576829f8"}, "178369": {"disasm": ["cmp [esp+imm] func", "ja addr"], "preds": [178361], "succs": [178378, 178584], "hash": "1525541a64daea075fc1ff2eb3d263a6"}, "178378": {"disasm": ["movzx ecx byte ptr [esp+imm]", "mov edx func", "sub esp imm", "shr edx cl", "mov [esp+imm] func", "push func", "push [esp+imm]", "push func", "call dword ptr [hd_0+imm]", "mov edx [esp+imm]", "add esp imm", "mov [esp+imm] imm", "cmp esi nburn", "cmovb esi nburn", "movd xmm1 [esp+imm]", "mov dword ptr [hd_0+imm] imm", "mov [esp+imm] edx", "movd xmm0 [esp+imm]", "punpckldq xmm0 xmm1", "movq xmm1 qword ptr [hd_0+imm]", "paddq xmm0 xmm1", "movdqa xmm1 xmm0", "movd nburn xmm0", "psrlq xmm1 imm", "cmp eax edx", "movd ecx xmm1", "sbb ecx [esp+imm]", "movdqa xmm1 ds:(func - imm)[ebx]", "jnb addr"], "preds": [178369], "succs": [178503, 178640], "hash": "956072a69c445b33753f836c9e0cb7ba"}, "178503": {"disasm": ["mov eax [esp+imm]", "movq qword ptr [hd_0+imm] xmm0", "movzx ecx byte ptr [esp+imm]", "movq xmm2 qword ptr [hd_0+imm]", "paddq xmm1 xmm2", "shl eax cl", "movq qword ptr [hd_0+imm] xmm1", "sub edi eax", "jnz short addr"], "preds": [178378, 178640], "succs": [178546, 178577], "hash": "5c76b9bbb49436fe421f1997ab55403d"}, "178546": {"disasm": ["test func func", "jnz short addr"], "preds": [178503], "succs": [178550, 178611], "hash": "5629dd8a4ada2189c79e13cf5ed2aed1"}, "178550": {"disasm": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop func", "retn"], "preds": [178153, 178361, 178546, 178584], "succs": [], "hash": "24d4fe1a1ac07e412468e197c2439bb7"}, "178560": {"disasm": ["mov dword ptr [hd_0+imm] imm", "xor esi esi", "jmp addr"], "preds": [178167], "succs": [178361], "hash": "43887b44178d63c8c57cf9155649b66f"}, "178577": {"disasm": ["add [esp+imm] eax", "lea func [stack_burn+imm]"], "preds": [178503], "succs": [178584], "hash": "0551e6e6f2bce348d8425e811c0ff4a9"}, "178584": {"disasm": ["sub esp imm", "push func", "push [esp+imm]", "push func", "call func", "add esp imm", "mov [hd_0+imm] func", "test func func", "jz short addr"], "preds": [178369, 178577], "succs": [178550, 178611], "hash": "b83be37551a854319d68de58189b2c68"}, "178611": {"disasm": ["sub esp imm", "push func", "call func", "add esp imm", "add esp imm", "pop ebx", "pop func", "pop edi", "pop func", "retn"], "preds": [178546, 178584], "succs": [], "hash": "97234d3ef9a0fdff54696864f831c3ba"}, "178640": {"disasm": ["pxor xmm1 xmm1", "jmp addr"], "preds": [178378], "succs": [178503], "hash": "852cb3f6ccd0a084588b0eccfb406002"}, "178649": {"disasm": ["xor esi esi", "jmp addr"], "preds": [178182, 178218], "succs": [178361], "hash": "ee41d1d3fe0a865a037bbe33e8470efc"}, "178656": {"disasm": ["lea func (func - imm)[ebx]", "push edx", "push eax", "lea eax (func - imm)[ebx]", "push imm", "push eax", "call func"], "preds": [178096], "succs": [], "hash": "d402f02246da48aa0fc1e3f809dba209"}}, "do_encrypt_3": {"190288": {"disasm": ["push ebp", "push edi", "push esi", "push ebx", "mov ebx src", "sub esp imm", "mov esi [ebx+imm]", "mov [esp+imm] func", "mov func [ebx+imm]", "mov ebp [ebx+imm]", "mov src [src]", "bswap esi", "xor esi [bc+imm]", "mov edi edx", "mov edx [src+imm]", "bswap edi", "mov [esp+imm] edi", "mov edi [src+imm]", "bswap ebp", "mov src [bc+imm]", "bswap ecx", "bswap edx", "bswap edi", "mov [esp+imm] edi", "xor func ebx", "xor xl2 ebx", "xor func ebx", "mov ebx ecx", "shr ebx imm", "movzx edi bl", "mov ebx ecx", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi cl", "add ebx [s0+imm]", "mov edi ebx", "xor edi esi", "mov esi func", "shr esi imm", "mov [esp+imm] edi", "mov ebx esi", "mov esi func", "movzx ebx bl", "shr esi imm", "mov esi [s0+imm]", "add esi [s0+imm]", "mov ebx func", "movzx ebx imm", "xor esi [s0+imm]", "mov ebx func", "movzx ebx bl", "add esi [s0+imm]", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "xor esi ebx", "mov ebx xl2", "shr ebx imm", "movzx edi bl", "mov ebx xl2", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "mov edi [esp+imm]", "xor edi [s0+imm]", "xor ebx edi", "mov edi [s0+imm]", "xor ecx edi", "xor ebp edi", "xor edi edx", "mov [esp+imm] ecx", "mov ecx [esp+imm]", "mov [esp+imm] edi", "mov edi ecx", "shr edi imm", "mov edx edi", "movzx edi dl", "mov edx ecx", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "mov ecx esi", "xor edx [s0+imm]", "movzx edi byte ptr [esp+imm]", "add edx [s0+imm]", "shr ecx imm", "mov edi [esp+imm]", "mov ecx [s0+imm]", "xor edi edx", "mov edx esi", "shr edx imm", "mov [esp+imm] edi", "movzx edx dl", "add ecx [s0+imm]", "mov edx esi", "movzx edx imm", "xor ecx [s0+imm]", "mov edx esi", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "mov edi ecx", "mov ecx [esp+imm]", "xor edi ebp", "mov ebp [s0+imm]", "mov [esp+imm] edi", "movzx edi dl", "mov edx func", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor esi ebp", "xor edx [s0+imm]", "movzx edi bl", "add edx [s0+imm]", "mov edi [esp+imm]", "mov [esp+imm] esi", "xor edx [esp+imm]", "xor edi ebp", "xor ebp ebx", "mov ebx ecx", "shr ebx imm", "movzx esi bl", "mov ebx ecx", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx esi imm", "xor ebx [s0+imm]", "movzx esi byte ptr [esp+imm]", "add ebx [s0+imm]", "xor ebx edi", "mov edi [esp+imm]", "mov ecx ebx", "mov ebx edi", "mov esi edi", "shr ebx imm", "shr esi imm", "movzx ebx bl", "mov esi [s0+imm]", "add esi [s0+imm]", "mov ebx edi", "mov edi xl2", "movzx ebx imm", "shr edi imm", "xor esi [s0+imm]", "movzx ebx byte ptr [esp+imm]", "add esi [s0+imm]", "mov ebx edi", "movzx edi bl", "mov ebx xl2", "xor esi [esp+imm]", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "xor xl2 [s0+imm]", "mov edi [esp+imm]", "xor edi [s0+imm]", "xor ebx ebp", "mov ebp [esp+imm]", "mov [esp+imm] edx", "mov edx xr0", "shr xr0 imm", "xor ebp [s0+imm]", "mov [esp+imm] xr0", "movzx ecx cl", "shr xr0 imm", "mov edx [s0+imm]", "add edx [s0+imm]", "mov ecx [esp+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx func", "shr ecx imm", "xor ebp edx", "movzx edx cl", "mov ecx func", "shr ecx imm", "mov ecx [s0+imm]", "add ecx [s0+imm]", "mov edx func", "movzx edx imm", "xor ecx [s0+imm]", "mov edx func", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "xor ecx edi", "movzx edi dl", "mov edx func", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "add edx [s0+imm]", "xor edx [esp+imm]", "mov edi [esp+imm]", "xor esi [s0+imm]", "xor ebx [s0+imm]", "xor edi [s0+imm]", "mov [esp+imm] esi", "mov esi ebp", "shr esi imm", "mov [esp+imm] ebx", "mov ebx esi", "movzx esi bl", "mov ebx ebp", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi imm", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi bl", "mov ebx [esp+imm]", "add ebx [s0+imm]", "mov esi func", "xor ebx edi", "shr esi imm", "mov edi xl2", "xor ebp [s0+imm]", "mov [esp+imm] ebx", "mov ebx esi", "mov esi func", "shr esi imm", "movzx ebx bl", "shr edi imm", "mov esi [s0+imm]", "add esi [s0+imm]", "movzx ebx imm", "xor esi [s0+imm]", "movzx ebx cl", "add esi [s0+imm]", "mov ebx edi", "movzx edi bl", "mov ebx xl2", "xor esi [esp+imm]", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "mov edi [s0+imm]", "xor ebx [esp+imm]", "xor edi ecx", "mov ecx [s0+imm]", "xor ecx edx", "mov edx [esp+imm]", "mov [esp+imm] ecx", "mov ecx edx", "shr edx imm", "shr ecx imm", "mov edx [s0+imm]", "movzx ecx cl", "add edx [s0+imm]", "mov ecx [esp+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx func", "shr ecx imm", "mov ecx [s0+imm]", "xor ebp edx", "mov edx func", "shr edx imm", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "movzx edx imm", "xor ecx [s0+imm]", "mov edx func", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "xor ecx edi", "movzx edi dl", "mov edx func", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "add edx [s0+imm]", "xor esi [s0+imm]", "xor func [s0+imm]", "xor edx [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] esi", "mov esi ebp", "xor edi [s0+imm]", "shr esi imm", "mov [esp+imm] ebx", "mov ebx esi", "movzx esi bl", "mov ebx ebp", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi imm", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi bl", "mov ebx [esp+imm]", "add ebx [s0+imm]", "mov esi func", "shr esi imm", "xor ebx edi", "mov edi xl2", "mov [esp+imm] ebx", "mov ebx esi", "mov esi func", "shr edi imm", "movzx ebx bl", "shr esi imm", "mov esi [s0+imm]", "add esi [s0+imm]", "movzx ebx imm", "xor esi [s0+imm]", "movzx ebx cl", "add esi [s0+imm]", "mov ebx edi", "movzx edi bl", "mov ebx xl2", "xor esi [esp+imm]", "shr ebx imm", "xor ebp [s0+imm]", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "mov edi [s0+imm]", "xor ebx [esp+imm]", "xor edi ecx", "mov ecx [s0+imm]", "xor ecx edx", "mov edx [esp+imm]", "mov [esp+imm] ecx", "mov ecx edx", "shr edx imm", "shr ecx imm", "mov edx [s0+imm]", "movzx ecx cl", "add edx [s0+imm]", "mov ecx [esp+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx func", "xor ebp edx", "mov edx func", "shr edx imm", "shr ecx imm", "movzx edx dl", "mov ecx [s0+imm]", "add ecx [s0+imm]", "mov edx func", "movzx edx imm", "xor ecx [s0+imm]", "mov edx func", "movzx edx dl", "xor func [s0+imm]", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "mov [esp+imm] esi", "mov esi func", "xor ecx edi", "movzx edi dl", "mov edx func", "shr edx imm", "shr esi imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "xor func [s0+imm]", "add edx [s0+imm]", "xor edx [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] ebx", "mov ebx esi", "xor edi [s0+imm]", "movzx esi bl", "mov ebx func", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi imm", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi bl", "mov ebx [esp+imm]", "add ebx [s0+imm]", "mov esi func", "shr esi imm", "xor ebx edi", "mov edi xl2", "mov [esp+imm] ebx", "mov ebx esi", "mov esi func", "shr edi imm", "movzx ebx bl", "shr esi imm", "mov esi [s0+imm]", "add esi [s0+imm]", "movzx ebx imm", "xor esi [s0+imm]", "movzx ebx cl", "add esi [s0+imm]", "mov ebx edi", "movzx edi bl", "mov ebx xl2", "xor esi [esp+imm]", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "mov edi [s0+imm]", "xor ebx [esp+imm]", "xor ebp [s0+imm]", "xor edi ecx", "mov ecx [s0+imm]", "xor ecx edx", "mov edx [esp+imm]", "mov [esp+imm] ecx", "mov ecx edx", "shr edx imm", "shr ecx imm", "mov edx [s0+imm]", "movzx ecx cl", "add edx [s0+imm]", "mov ecx [esp+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx func", "shr ecx imm", "mov ecx [s0+imm]", "xor ebp edx", "mov edx func", "shr edx imm", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "movzx edx imm", "xor ecx [s0+imm]", "mov edx func", "movzx edx dl", "xor func [s0+imm]", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "mov [esp+imm] esi", "mov esi func", "xor ecx edi", "movzx edi dl", "mov edx func", "shr edx imm", "shr esi imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "xor func [s0+imm]", "add edx [s0+imm]", "xor edx [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] ebx", "mov ebx esi", "xor edi [s0+imm]", "movzx esi bl", "mov ebx ebp", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi imm", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi bl", "mov ebx [esp+imm]", "add ebx [s0+imm]", "mov esi func", "shr esi imm", "xor ebx edi", "mov edi xl2", "mov [esp+imm] ebx", "mov ebx esi", "mov esi func", "shr esi imm", "movzx ebx bl", "shr edi imm", "mov esi [s0+imm]", "add esi [s0+imm]", "movzx ebx imm", "xor esi [s0+imm]", "movzx ebx cl", "add esi [s0+imm]", "mov ebx edi", "movzx edi bl", "mov ebx xl2", "xor esi [esp+imm]", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "xor ebx [esp+imm]", "xor ebp [s0+imm]", "mov edi [s0+imm]", "xor edi ecx", "mov ecx [s0+imm]", "xor ecx edx", "mov edx [esp+imm]", "mov [esp+imm] ecx", "mov ecx edx", "shr edx imm", "shr ecx imm", "mov edx [s0+imm]", "movzx ecx cl", "add edx [s0+imm]", "mov ecx [esp+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx func", "shr ecx imm", "mov ecx [s0+imm]", "xor ebp edx", "mov edx func", "shr edx imm", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "movzx edx imm", "xor ecx [s0+imm]", "mov edx func", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "xor ecx edi", "movzx edi dl", "mov edx func", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "add edx [s0+imm]", "mov edi [esp+imm]", "xor edx [esp+imm]", "xor edi [s0+imm]", "xor esi [s0+imm]", "xor ebx [s0+imm]", "mov [esp+imm] esi", "mov esi func", "shr esi imm", "mov [esp+imm] ebx", "mov ebx esi", "movzx esi bl", "mov ebx func", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx func", "movzx esi imm", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx func", "movzx esi bl", "mov ebx [esp+imm]", "add xr0 [s0+imm]", "mov esi func", "shr esi imm", "xor ebp [s0+imm]", "xor ebx edi", "mov edi xl2", "mov [esp+imm] ebx", "mov ebx esi", "mov esi func", "shr edi imm", "movzx ebx bl", "shr esi imm", "mov esi [s0+imm]", "add esi [s0+imm]", "movzx ebx imm", "xor esi [s0+imm]", "movzx ebx cl", "add esi [s0+imm]", "mov ebx edi", "movzx edi bl", "mov ebx xl2", "xor esi [esp+imm]", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx edi imm", "xor ebx [s0+imm]", "movzx edi dl", "add ebx [s0+imm]", "mov edi [s0+imm]", "xor ebx [esp+imm]", "xor edi ecx", "mov ecx [s0+imm]", "xor ecx edx", "mov edx [esp+imm]", "mov [esp+imm] ecx", "mov ecx edx", "shr edx imm", "shr ecx imm", "mov edx [s0+imm]", "movzx ecx cl", "add edx [s0+imm]", "mov ecx [esp+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx func", "shr ecx imm", "mov ecx [s0+imm]", "xor ebp edx", "mov edx func", "shr edx imm", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "movzx edx imm", "xor ecx [s0+imm]", "mov edx func", "movzx edx dl", "add ecx [s0+imm]", "mov edx func", "shr edx imm", "xor ecx edi", "movzx edi dl", "mov edx func", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "add edx [s0+imm]", "xor edx [esp+imm]", "xor ebx [s0+imm]", "xor esi [s0+imm]", "mov edi [esp+imm]", "xor edi [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "shr ebx imm", "mov [esp+imm] esi", "movzx esi bl", "mov ebx ebp", "shr ebx imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "movzx esi imm", "mov ebx [esp+imm]", "xor ebx [s0+imm]", "mov [esp+imm] ebx", "mov ebx ebp", "xor ebp [s0+imm]", "movzx esi bl", "mov ebx [esp+imm]", "add ebx [s0+imm]", "xor ebx edi", "mov edi ecx", "shr edi imm", "mov [esp+imm] ebx", "mov ebx edi", "mov edi ecx", "movzx esi bl", "shr edi imm", "mov ebx [s0+imm]", "add ebx [s0+imm]", "movzx esi imm", "xor ebx [s0+imm]", "movzx esi cl", "add ebx [s0+imm]", "mov esi xl2", "xor ebx [esp+imm]", "shr esi imm", "mov [esp+imm] ebx", "mov ebx esi", "mov esi xl2", "movzx edi bl", "shr esi imm", "mov ebx [esp+imm]", "mov esi [s0+imm]", "add esi [s0+imm]", "movzx edi imm", "xor esi [s0+imm]", "movzx edi dl", "add esi [s0+imm]", "mov edi [s0+imm]", "xor esi [esp+imm]", "xor edi ecx", "xor edx [s0+imm]", "mov ecx ebx", "shr ecx imm", "movzx ecx cl", "mov [esp+imm] edx", "mov edx ebx", "shr edx imm", "mov edx [s0+imm]", "add edx [s0+imm]", "movzx ecx imm", "xor edx [s0+imm]", "movzx ecx byte ptr [esp+imm]", "add edx [s0+imm]", "mov ecx [esp+imm]", "xor edx ebp", "mov ebp [s0+imm]", "mov ebx ecx", "mov [esp+imm] edx", "shr ebx imm", "movzx edx bl", "mov ebx ecx", "shr ecx imm", "mov ecx [s0+imm]", "add ecx [s0+imm]", "movzx edx imm", "mov ebx func", "xor ecx [s0+imm]", "shr ebx imm", "movzx edx byte ptr [esp+imm]", "add ecx [s0+imm]", "xor ecx edi", "mov edi func", "shr edi imm", "bswap func", "mov edx edi", "movzx edi dl", "mov edx [s0+imm]", "mov ebx func", "add edx [s0+imm]", "movzx edi imm", "xor edx [s0+imm]", "movzx edi bl", "add edx [s0+imm]", "mov edi [esp+imm]", "mov ebx [esp+imm]", "mov s0 [esp+imm]", "xor edx [esp+imm]", "xor edi ebp", "bswap xr0", "mov [ebx] edi", "mov edi ebx", "bswap eax", "mov [ebx+imm] eax", "mov ebx [esp+imm]", "mov [edi+imm] ecx", "bswap xl2", "mov [edi+imm] edx", "xor ebx ebp", "xor ebp esi", "bswap func", "bswap func", "mov [edi+imm] ebx", "mov [edi+imm] ebp", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "preds": [], "succs": [], "hash": "12b6464d2bad8f2457525de18699d41a"}}, "prefetch_dec": {"226304": {"disasm": ["call func", "add eax (func func - imm)", "mov edx dword ptr (func - imm)[eax]", "add edx imm", "mov dword ptr (func - imm)[eax] edx", "mov edx (func - imm)[eax]", "add edx imm", "mov (func - imm)[eax] edx", "movzx edx byte ptr (func - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr (func - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx (func - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx imm - imm)[eax]", "movzx edx byte ptr (func - imm)[eax]", "movzx eax byte ptr (func - imm)[eax]", "retn"], "preds": [], "succs": [], "hash": "e52cfd85dfba47e6fc7cee87e4ed34e1"}}, "do_encrypt_0": {"226656": {"disasm": ["push ebp", "call func", "add ebp (func func - imm)", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov edx [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] ebp", "mov ebx [esp+imm]", "mov ecx [eax]", "xor ecx [edx]", "mov edx [eax+imm]", "xor edx [esi+imm]", "mov ebx [ebx+imm]", "mov esi [eax+imm]", "mov [esp+imm] edx", "mov edx [esp+imm]", "mov [esp+imm] ebx", "mov ebx [eax+imm]", "xor esi [edx+imm]", "xor ebx [edx+imm]", "mov eax esi", "movzx edi al", "lea eax (func - imm)[ebp]", "mov edi [eax+imm]", "xor edi [edx+imm]", "mov edx [esp+imm]", "mov ebp edi", "shr edx imm", "mov edi [eax+imm]", "ror edi imm", "xor edi ebp", "mov ebp ecx", "shr ebp imm", "mov edx ebp", "movzx ebp dl", "mov edx [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor edi ebp", "movzx ebp imm", "mov ebp [eax+imm]", "rol ebp imm", "xor edi ebp", "mov [esp+imm] edi", "movzx edi byte ptr [esp+imm]", "mov edi [eax+imm]", "xor edi [edx+imm]", "mov edx esi", "mov ebp edi", "mov edi ecx", "shr edi imm", "mov edi [eax+imm]", "ror edi imm", "xor edi ebp", "movzx ebp imm", "mov ebp [eax+imm]", "rol ebp imm", "xor edi ebp", "mov ebp ebx", "shr ebp imm", "mov edx ebp", "movzx ebp dl", "mov edx [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor edi ebp", "mov [esp+imm] edi", "movzx edi cl", "movzx ecx imm", "mov edi [eax+imm]", "xor edi [edx+imm]", "mov edx [esp+imm]", "mov ebp edi", "mov edi ebx", "movzx ebx bl", "shr edi imm", "mov ebx [eax+imm]", "mov edi [eax+imm]", "ror edi imm", "xor edi ebp", "movzx ebp imm", "mov ebp [eax+imm]", "rol ebp imm", "xor edi ebp", "mov ebp esi", "shr ebp imm", "mov edx ebp", "movzx ebp dl", "mov edx [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor edi ebp", "shr esi imm", "xor ebx [edx+imm]", "mov esi [eax+imm]", "mov [esp+imm] edi", "mov edx [esp+imm]", "ror esi imm", "xor ebx esi", "mov esi [eax+imm]", "shr edx imm", "movzx edx dl", "mov edx [eax+imm]", "rol esi imm", "xor esi ebx", "mov ebx [esp+imm]", "rol edx imm", "xor esi edx", "cmp ebx imm", "jle addr"], "preds": [], "succs": [227012, 227968], "hash": "921451caaeac9b497dd73155e6863a81"}, "227012": {"disasm": ["mov ecx [esp+imm]", "sub ebx imm", "mov edx ebx", "shr edx imm", "mov [esp+imm] edx", "shl edx imm", "lea ebx [ecx+imm]", "mov [esp+imm] ebx", "lea edi [ecx+imm]", "mov ebx esi", "lea esi [esi+imm]", "nop"], "preds": [226656], "succs": [227048], "hash": "afb32894b97d06fa5b758442ed4c33bf"}, "227048": {"disasm": ["movzx edx byte ptr [esp+imm]", "mov ebp [esp+imm]", "mov esi [esp+imm]", "mov edx [eax+imm]", "xor edx [edi+imm]", "mov ecx edx", "mov edx ebp", "shr edx imm", "mov edx [eax+imm]", "ror edx imm", "xor edx ecx", "mov ecx esi", "shr ecx imm", "movzx ecx cl", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "movzx ecx imm", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "mov ecx ebp", "mov [esp+imm] edx", "movzx edx cl", "mov ecx [edi+imm]", "mov edx [eax+imm]", "xor ecx edx", "mov edx esi", "shr edx imm", "mov edx [eax+imm]", "ror edx imm", "xor edx ecx", "mov ecx [esp+imm]", "movzx ecx imm", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "mov ecx ebx", "shr ecx imm", "movzx ecx cl", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "movzx ecx byte ptr [esp+imm]", "mov [esp+imm] edx", "mov edx ebp", "mov ecx [eax+imm]", "xor ecx [edi]", "mov esi ecx", "mov ecx ebx", "movzx ebx bl", "shr ecx imm", "mov ebp [eax+imm]", "mov ecx [eax+imm]", "xor ebp [edi+imm]", "ror ecx imm", "xor ecx esi", "movzx esi imm", "mov esi [eax+imm]", "rol esi imm", "xor ecx esi", "mov esi [esp+imm]", "shr esi imm", "mov edx esi", "movzx esi dl", "mov edx [esp+imm]", "mov esi [eax+imm]", "rol esi imm", "xor ecx esi", "mov esi [esp+imm]", "shr esi imm", "mov ebx [eax+imm]", "movzx esi imm", "ror ebx imm", "xor ebx ebp", "mov ebp [eax+imm]", "rol ebp imm", "xor ebx ebp", "mov ebp [esp+imm]", "shr ebp imm", "mov edx ebp", "movzx ebp dl", "mov esi [eax+imm]", "rol esi imm", "xor ebx esi", "mov [esp+imm] ebx", "mov ebx [esp+imm]", "movzx esi bl", "mov esi [eax+imm]", "xor esi [edi+imm]", "mov ebp esi", "mov esi [esp+imm]", "shr esi imm", "mov esi [eax+imm]", "ror esi imm", "xor esi ebp", "mov ebp ecx", "shr ebp imm", "mov edx ebp", "movzx ebp dl", "mov edx [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "movzx ebp imm", "mov edx ebx", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "mov [esp+imm] esi", "movzx esi byte ptr [esp+imm]", "mov esi [eax+imm]", "xor esi [edi+imm]", "mov ebp esi", "mov esi ecx", "shr esi imm", "mov esi [eax+imm]", "ror esi imm", "xor esi ebp", "movzx ebp imm", "mov ebx [esp+imm]", "mov ebp [eax+imm]", "shr ebx imm", "rol ebp imm", "xor esi ebp", "movzx ebp bl", "mov ebx [esp+imm]", "mov ebp [eax+imm]", "shr ebx imm", "rol ebp imm", "xor esi ebp", "mov [esp+imm] esi", "movzx esi cl", "movzx ecx imm", "mov esi [eax+imm]", "xor esi [edi+imm]", "mov ebp esi", "mov esi [eax+imm]", "mov ebx [esp+imm]", "ror esi imm", "xor esi ebp", "movzx ebp imm", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "mov ebp edx", "shr ebp imm", "mov ebx ebp", "movzx ebp bl", "movzx ebx byte ptr [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "mov [esp+imm] esi", "mov esi [eax+imm]", "xor esi [edi+imm]", "shr edx imm", "add edi imm", "mov ebx [eax+imm]", "mov edx [esp+imm]", "ror ebx imm", "shr edx imm", "xor esi ebx", "mov ebx [eax+imm]", "movzx edx dl", "mov edx [eax+imm]", "rol ebx imm", "xor ebx esi", "rol edx imm", "xor ebx edx", "cmp [esp+imm] edi", "jnz addr"], "preds": [227012, 227048], "succs": [227578, 227048], "hash": "040fe6f3d557c0499a335d128a290ccf"}, "227578": {"disasm": ["mov eax [esp+imm]", "mov esi ebx", "lea edx [eax+imm]"], "preds": [227048], "succs": [227588], "hash": "df7ac76d6d4e0d56f5ce39f6e885f661"}, "227588": {"disasm": ["mov edi [esp+imm]", "shl edx imm", "movzx eax byte ptr [esp+imm]", "mov ecx [esp+imm]", "add edx [esp+imm]", "mov ebx [esp+imm]", "movzx ebp byte ptr [edi+imm]", "mov eax ecx", "shr eax imm", "xor ebp [edx+imm]", "movzx eax byte ptr [edi+imm]", "shl eax imm", "xor ebp eax", "mov eax ebx", "shr eax imm", "and eax 3FCh", "movzx eax byte ptr [eax+imm]", "shl eax imm", "xor ebp eax", "mov eax esi", "movzx eax imm", "movzx eax byte ptr [edi+imm]", "shl eax imm", "xor ebp eax", "movzx eax byte ptr [esp+imm]", "movzx eax byte ptr [edi+imm]", "xor eax [edx+imm]", "mov ecx eax", "mov eax ebx", "mov ebx [esp+imm]", "shr eax imm", "movzx eax byte ptr [edi+imm]", "shl eax imm", "xor eax ecx", "movzx ecx imm", "movzx ecx byte ptr [edi+imm]", "shl ecx imm", "xor eax ecx", "mov ecx esi", "shr ecx imm", "and ecx 3FCh", "movzx ecx byte ptr [ecx+imm]", "shl ecx imm", "xor eax ecx", "mov ecx esi", "movzx ecx cl", "movzx ecx byte ptr [edi+imm]", "xor ecx [edx+imm]", "mov ebx ecx", "mov ecx [esp+imm]", "shr ecx imm", "movzx ecx byte ptr [edi+imm]", "shl ecx imm", "xor ecx ebx", "mov ebx [esp+imm]", "movzx ebx imm", "movzx ebx byte ptr [edi+imm]", "shl ebx imm", "xor ecx ebx", "mov ebx [esp+imm]", "shr ebx imm", "and ebx 3FCh", "movzx ebx byte ptr [ebx+imm]", "movzx edi byte ptr [esp+imm]", "shl ebx imm", "xor ecx ebx", "mov ebx [esp+imm]", "movzx ebx byte ptr [ebx+imm]", "mov edi [esp+imm]", "xor ebx [edx]", "shr esi imm", "movzx edx byte ptr [edi+imm]", "shl edx imm", "xor ebx edx", "mov edx [esp+imm]", "mov esi [esp+imm]", "movzx edi imm", "movzx edx byte ptr [esi+imm]", "mov edi [esp+imm]", "shl edx imm", "shr edi imm", "xor ebx edx", "and edi 3FCh", "movzx edx byte ptr [edi+imm]", "shl edx imm", "xor ebx edx", "mov edx [esp+imm]", "mov [edx+imm] eax", "mov eax imm", "mov [edx] ebx", "mov [edx+imm] ebp", "mov [edx+imm] ecx", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "preds": [227578, 227968], "succs": [], "hash": "a8a06a86afd6b8bedc4262aad428bfa7"}, "227968": {"disasm": ["mov edx imm", "jmp addr"], "preds": [226656], "succs": [227588], "hash": "3ac02c8bd2fb2ea27f2f47844dcbfc94"}}, "do_decrypt": {"228048": {"disasm": ["call func", "add edx (func func - imm)", "push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov ebx [esp+imm]", "mov edi [esp+imm]", "mov eax [eax+imm]", "mov ebp [ebx]", "mov esi [ebx+imm]", "mov ecx eax", "shl ecx imm", "xor ebp [ecx+imm]", "mov ecx eax", "shl ecx imm", "add ecx edi", "mov edi [ebx+imm]", "xor edi [ecx+imm]", "xor esi [ecx+imm]", "mov [esp+imm] ebp", "mov [esp+imm] edi", "mov edi [ebx+imm]", "xor edi [ecx+imm]", "cmp eax imm", "mov [esp+imm] edi", "jle addr"], "preds": [], "succs": [228152, 229376], "hash": "0523ef81fdd254b37e1b4d5f9505fbe7"}, "228152": {"disasm": ["mov ebx [esp+imm]", "lea ecx [eax+imm]", "sub eax imm", "mov edi [esp+imm]", "shl ecx imm", "shr eax imm", "shl eax imm", "add edi ecx", "lea ecx [ebx+imm]", "mov ebx esi", "sub ecx eax", "mov [esp+imm] ecx", "lea eax (func - imm)[edx]", "lea esi [esi+imm]"], "preds": [228048], "succs": [228200], "hash": "884dba02467e08debfa86717a02837a7"}, "228200": {"disasm": ["movzx edx byte ptr [esp+imm]", "mov ebp [esp+imm]", "mov esi [esp+imm]", "mov edx [eax+imm]", "xor edx [edi+imm]", "mov ecx edx", "mov edx ebp", "shr edx imm", "mov edx [eax+imm]", "ror edx imm", "xor edx ecx", "mov ecx esi", "shr ecx imm", "movzx ecx cl", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "movzx ecx imm", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "mov ecx [edi+imm]", "mov [esp+imm] edx", "mov edx ebp", "movzx edx dl", "mov edx [eax+imm]", "xor ecx edx", "mov edx esi", "shr edx imm", "mov edx [eax+imm]", "ror edx imm", "xor edx ecx", "mov ecx [esp+imm]", "movzx ecx imm", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "mov ecx ebx", "shr ecx imm", "movzx ecx cl", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "movzx ecx byte ptr [esp+imm]", "mov [esp+imm] edx", "mov ecx [eax+imm]", "xor ecx [edi+imm]", "mov esi ecx", "mov ecx ebx", "movzx ebx bl", "shr ecx imm", "mov ecx [eax+imm]", "ror ecx imm", "xor ecx esi", "mov esi [esp+imm]", "shr esi imm", "mov edx esi", "movzx esi dl", "mov edx ebp", "mov ebp [eax+imm]", "mov esi [eax+imm]", "mov ebx [esp+imm]", "xor ebp [edi+imm]", "rol esi imm", "xor ecx esi", "movzx esi imm", "shr ebx imm", "mov esi [eax+imm]", "rol esi imm", "xor ecx esi", "mov esi ebp", "mov ebp [eax+imm]", "mov ebx ebp", "ror ebx imm", "xor esi ebx", "mov ebx edx", "mov edx [esp+imm]", "shr ebx imm", "mov ebp esi", "movzx esi bl", "mov ebx [eax+imm]", "movzx esi imm", "mov esi [eax+imm]", "rol ebx imm", "xor ebx ebp", "rol esi imm", "xor ebx esi", "mov [esp+imm] ebx", "mov ebx [esp+imm]", "movzx esi bl", "mov esi [eax+imm]", "xor esi [edi]", "mov ebp esi", "mov esi [esp+imm]", "shr esi imm", "mov esi [eax+imm]", "ror esi imm", "xor esi ebp", "mov ebp ecx", "shr ebp imm", "mov edx ebp", "movzx ebp dl", "mov edx [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "movzx ebp imm", "mov edx ebx", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "mov [esp+imm] esi", "movzx esi byte ptr [esp+imm]", "mov esi [eax+imm]", "xor esi [edi+imm]", "mov ebp esi", "mov esi ecx", "shr esi imm", "mov esi [eax+imm]", "ror esi imm", "xor esi ebp", "movzx ebp imm", "mov ebx [esp+imm]", "mov ebp [eax+imm]", "shr ebx imm", "rol ebp imm", "xor esi ebp", "movzx ebp bl", "mov ebx [esp+imm]", "mov ebp [eax+imm]", "shr ebx imm", "rol ebp imm", "xor esi ebp", "mov [esp+imm] esi", "movzx esi cl", "movzx ecx imm", "mov esi [eax+imm]", "xor esi [edi+imm]", "mov ebp esi", "mov esi [eax+imm]", "ror esi imm", "xor esi ebp", "mov ebp edx", "shr ebp imm", "mov ebx ebp", "movzx ebp bl", "mov ebx [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "movzx ebp imm", "movzx ebx byte ptr [esp+imm]", "mov ebp [eax+imm]", "rol ebp imm", "xor esi ebp", "mov [esp+imm] esi", "mov esi [eax+imm]", "xor esi [edi+imm]", "shr edx imm", "sub edi imm", "mov ebx [eax+imm]", "mov edx [esp+imm]", "ror ebx imm", "shr edx imm", "xor esi ebx", "movzx edx dl", "mov ebx [eax+imm]", "mov edx [eax+imm]", "rol ebx imm", "xor ebx esi", "rol edx imm", "xor ebx edx", "cmp [esp+imm] edi", "jnz addr"], "preds": [228152, 228200], "succs": [228731, 228200], "hash": "516fed57489424a33da1f6fa4be08cc4"}, "228731": {"disasm": ["mov esi ebx"], "preds": [228200], "succs": [228733], "hash": "e28e9fa52f6889fa69524e7cb4b02ef2"}, "228733": {"disasm": ["mov ebx [esp+imm]", "movzx edx byte ptr [esp+imm]", "mov ebp [esp+imm]", "mov edi [esp+imm]", "mov ecx [ebx+imm]", "mov ebx esi", "mov edx [eax+imm]", "xor ecx edx", "mov edx ebp", "shr edx imm", "mov edx [eax+imm]", "ror edx imm", "xor edx ecx", "mov ecx edi", "shr ecx imm", "movzx ecx cl", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "movzx ecx imm", "mov ebx ebp", "mov ecx [eax+imm]", "rol ecx imm", "xor edx ecx", "mov ecx [esp+imm]", "mov [esp+imm] edx", "movzx edx bl", "mov ebx [eax+imm]", "xor ebx [ecx+imm]", "mov ecx edi", "shr ecx imm", "mov edx [eax+imm]", "mov ecx esi", "shr ecx imm", "ror edx imm", "xor ebx edx", "mov edx [esp+imm]", "movzx edx imm", "mov edx [eax+imm]", "rol edx imm", "xor ebx edx", "movzx edx cl", "mov edx [eax+imm]", "rol edx imm", "xor ebx edx", "mov [esp+imm] ebx", "mov ebx edi", "mov edi [esp+imm]", "movzx edx bl", "mov ecx [eax+imm]", "xor ecx [edi+imm]", "mov edi esi", "shr edi imm", "mov edx [eax+imm]", "mov edi [esp+imm]", "ror edx imm", "xor ecx edx", "mov edx edi", "shr edi imm", "shr edx imm", "movzx edx dl", "mov edx [eax+imm]", "rol edx imm", "xor ecx edx", "mov edx ebp", "movzx edx imm", "mov edx [eax+imm]", "rol edx imm", "xor edx ecx", "mov ecx esi", "movzx esi cl", "mov ecx [esp+imm]", "mov esi [eax+imm]", "xor esi [ecx+imm]", "mov ecx [eax+imm]", "ror ecx imm", "xor esi ecx", "mov ecx [esp+imm]", "shr ecx imm", "movzx edi cl", "mov ecx [eax+imm]", "movzx edi imm", "rol ecx imm", "xor ecx esi", "mov esi [eax+imm]", "rol esi imm", "xor ecx esi", "movzx esi byte ptr [esp+imm]", "mov ebp [esp+imm]", "mov ebx [esp+imm]", "movzx esi byte ptr [esi+imm]", "mov edi [ebp+imm]", "xor edi esi", "mov esi edx", "shr esi imm", "movzx esi byte ptr [esi+imm]", "shl esi imm", "xor esi edi", "movzx edi imm", "movzx edi byte ptr [edi+imm]", "shl edi imm", "xor esi edi", "mov edi ecx", "shr edi imm", "mov ebx edi", "movzx edi bl", "movzx edi byte ptr [edi+imm]", "shl edi imm", "xor esi edi", "mov edi [ebp+imm]", "mov [esp+imm] esi", "movzx esi dl", "mov ebp [ebp+imm]", "movzx esi byte ptr [esi+imm]", "xor edi esi", "mov esi ecx", "shr esi imm", "movzx esi byte ptr [esi+imm]", "shl esi imm", "xor esi edi", "mov edi [esp+imm]", "shr edi imm", "mov ebx edi", "movzx edi bl", "mov ebx [esp+imm]", "movzx edi byte ptr [edi+imm]", "shl edi imm", "xor esi edi", "movzx edi imm", "movzx edi byte ptr [edi+imm]", "shl edi imm", "xor esi edi", "movzx edi cl", "movzx ecx imm", "movzx edi byte ptr [edi+imm]", "xor ebp edi", "mov edi [esp+imm]", "shr edi imm", "movzx edi byte ptr [edi+imm]", "shl edi imm", "xor edi ebp", "mov ebp [esp+imm]", "shr ebp imm", "mov ebx ebp", "movzx ebp bl", "mov ebx [esp+imm]", "movzx ebp byte ptr [ebp+imm]", "shl ebp imm", "xor edi ebp", "movzx ebp imm", "movzx ebp byte ptr [ebp+imm]", "shl ebp imm", "xor edi ebp", "movzx ebp byte ptr [esp+imm]", "movzx ebp byte ptr [ebp+imm]", "xor ebp [ebx+imm]", "mov ebx [esp+imm]", "shr ebx imm", "shr edx imm", "movzx ebx byte ptr [ebx+imm]", "movzx edx dl", "shl ebx imm", "xor ebp ebx", "movzx ebx byte ptr imm - imm)[edx+eax]", "shl ebx imm", "xor ebp ebx", "movzx ebx byte ptr [ecx+imm]", "shl ebx imm", "xor ebp ebx", "mov ebx [esp+imm]", "mov [ebx] ebp", "mov eax [esp+imm]", "mov [ebx+imm] esi", "mov [ebx+imm] edi", "mov [ebx+imm] eax", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "preds": [228731, 229376], "succs": [], "hash": "4f601ccc8587172549e86e266b710df6"}, "229376": {"disasm": ["lea eax (func - imm)[edx]", "jmp addr"], "preds": [228048], "succs": [228733], "hash": "2057bb1b7a7f47a74ef2b968107de6ab"}}, "prefetch_enc": {"233248": {"disasm": ["call func", "add eax (func func - imm)", "mov edx dword ptr (func - imm)[eax]", "add edx imm", "mov dword ptr (func - imm)[eax] edx", "mov edx (func - imm)[eax]", "add edx imm", "mov (func - imm)[eax] edx", "movzx edx byte ptr (func - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr (func - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr imm - imm)[eax]", "movzx edx byte ptr (func - imm)[eax]", "movzx eax byte ptr (func - imm)[eax]", "retn"], "preds": [], "succs": [], "hash": "af5d4601269b253900c42e6a30eaa10f"}}, "gen_k": {"354384": {"disasm": ["push ebp", "push edi", "mov edi func", "push esi", "push ebx", "call func", "add ebx (func func - imm)", "sub esp imm", "mov [esp+imm] func", "push imm", "call func", "pop ebp", "push dword ptr [p_0+imm]", "mov esi eax", "call func", "mov [esp+imm] func", "mov [esp+imm] func", "mov ebp eax", "call func", "mov func eax", "pop func", "push [esp+imm]", "call func", "mov edx [esp+imm]", "add esp imm", "test edx edx", "jz addr"], "preds": [], "succs": [354467, 355154], "hash": "5ec8446ab6b056ab77c208cb7905bc18"}, "354467": {"disasm": ["xor edx edx", "mov ecx 200h", "jmp short addr"], "preds": [354384], "succs": [354498], "hash": "eb46ce46464ab34d9da7dbb8af2e6a0b"}, "354480": {"disasm": ["add edx imm", "mov ecx ds:(func - imm)[ebx+edx*8]", "test ecx ecx", "jz addr"], "preds": [354498], "succs": [354498, 355115], "hash": "83adf5c3032a4b211256faf4e941e1bf"}, "354498": {"disasm": ["cmp func ecx", "ja short addr"], "preds": [354467, 354480], "succs": [354480, 354502], "hash": "8675841cd6b370102f8061e32a048473"}, "354502": {"disasm": ["mov edx ds:(func - imm)[ebx+edx*8]"], "preds": [354498], "succs": [354509], "hash": "1da5457dc54c538662be17ecc742d562"}, "354509": {"disasm": ["lea edx [edx+imm]", "shr edx imm", "mov [esp+imm] edx", "cmp func func", "jbe addr"], "preds": [354502, 355115], "succs": [354526, 355163], "hash": "6d2b97b7d44f2cc4ed2f35cb6f83c2a2"}, "354526": {"disasm": ["mov func [esp+imm]", "sub esp imm", "add eax imm", "shr eax imm", "mov [esp+imm] eax", "push imm", "call func", "add esp imm", "test eax eax", "jnz addr"], "preds": [354509, 355154], "succs": [354561, 355131], "hash": "d2303685705351295b40a575cc0493a7"}, "354561": {"disasm": ["sub esp imm", "push imm", "push [esp+imm]", "push func", "call func", "lea eax (func - imm)[ebx]", "add esp imm", "cmp [esp+imm] imm", "mov [esp+imm] imm", "mov [esp+imm] eax", "setbe byte ptr [esp+imm]"], "preds": [354526, 355131], "succs": [354606], "hash": "12047e8f490c46c80636e9e48b06c0e0"}, "354606": {"disasm": ["mov ecx [esp+imm]", "test ecx ecx", "jz addr"], "preds": [354561, 354784, 354805, 354904, 354925, 354939], "succs": [354617, 354864], "hash": "dac1100db9f378f2b7555e1248f69004"}, "354617": {"disasm": ["cmp byte ptr [esp+imm] imm", "jnz addr"], "preds": [354606, 354819], "succs": [354628, 354864], "hash": "b2c8e8411b88af9f6fc97dbe0fa2dd09"}, "354628": {"disasm": ["sub esp imm", "push imm", "push imm", "call func", "mov ecx [esp+imm]", "mov edx [pp]", "mov [ecx] edx", "mov [esp+imm] pp", "call func", "add esp imm"], "preds": [354617], "succs": [354659], "hash": "6b2f9424e38e74f32bf08766e8d9d7fb"}, "354659": {"disasm": ["push imm", "push [esp+imm]", "push [esp+imm]", "push k", "call func", "add esp imm", "jmp short addr"], "preds": [354628, 354864], "succs": [354767], "hash": "9fb9207f28e0912dc5155bbae1cf3d81"}, "354688": {"disasm": ["sub esp imm", "push imm", "push k", "call func", "add esp imm", "test eax eax", "jle addr"], "preds": [354767], "succs": [354710, 354904], "hash": "b39989f3db87817944f6e9048512b55b"}, "354710": {"disasm": ["sub esp imm", "push func", "push k", "push temp", "call func", "add esp imm", "test eax eax", "jnz found"], "preds": [354688], "succs": [354732, 354976], "hash": "7c73c4f7278532c08ce6333f97401137"}, "354732": {"disasm": ["sub esp imm", "push imm", "push k", "push k", "call func", "mov [esp+imm] imm", "call func", "add esp imm", "test eax eax", "jnz addr"], "preds": [354710], "succs": [354767, 355072], "hash": "1da1831e9fcfe9980d7e7141f38a9dc6"}, "354767": {"disasm": ["sub esp imm", "push func", "push k", "call func", "add esp imm", "test eax eax", "js short addr"], "preds": [354659, 354732, 355072, 355086], "succs": [354688, 354784], "hash": "bd530be48c7b421fd62d71fd2376f230"}, "354784": {"disasm": ["sub esp imm", "push imm", "call func", "add esp imm", "test eax eax", "jz addr"], "preds": [354767], "succs": [354606, 354805], "hash": "ab4fb2167babd1dd7b101c2bdf206e73"}, "354805": {"disasm": ["mov eax ds:(func - imm)[ebx]", "test eax eax", "jz addr"], "preds": [354784], "succs": [354606, 354819], "hash": "6f6cd214ee0d53657669363d34ddddee"}, "354819": {"disasm": ["sub esp imm", "push imm", "push imm", "push imm", "push [esp+imm]", "push ds:(func - imm)[ebx]", "call eax", "mov ecx [esp+imm]", "add esp imm", "test func func", "jnz addr"], "preds": [354805], "succs": [354617, 354855], "hash": "e1d9a750b88ca340783c41efe895033d"}, "354855": {"disasm": ["lea k [k+imm]", "xchg ax ax"], "preds": [354819], "succs": [354864], "hash": "9640adbc72c26ae8f7db963b6dd75590"}, "354864": {"disasm": ["sub esp imm", "push [esp+imm]", "call func", "pop eax", "pop edx", "push imm", "push [esp+imm]", "call func", "mov [esp+imm] eax", "add esp imm", "jmp addr"], "preds": [354606, 354617, 354855], "succs": [354659], "hash": "f39234d68c2c4f3461030e5d5ebb8bc4"}, "354904": {"disasm": ["sub esp imm", "push imm", "call func", "add esp imm", "test eax eax", "jz addr"], "preds": [354688], "succs": [354606, 354925], "hash": "ab4fb2167babd1dd7b101c2bdf206e73"}, "354925": {"disasm": ["mov eax ds:(func - imm)[ebx]", "test eax eax", "jz addr"], "preds": [354904], "succs": [354606, 354939], "hash": "6f6cd214ee0d53657669363d34ddddee"}, "354939": {"disasm": ["sub esp imm", "push imm", "push imm", "push imm", "push [esp+imm]", "push ds:(func - imm)[ebx]", "call eax", "add esp imm", "jmp addr"], "preds": [354925], "succs": [354606], "hash": "22d2bc0bd4b9f8501bd0518ff2c20114"}, "354976": {"disasm": ["sub esp imm", "push [esp+imm]", "call func", "mov [esp+imm] imm", "call func", "add esp imm", "test eax eax", "jz short addr"], "preds": [354710], "succs": [355007, 355044], "hash": "e6f7df026eea4ba485eb22d78a324243"}, "355007": {"disasm": ["mov eax ds:(func - imm)[ebx]", "test eax eax", "jz short addr"], "preds": [354976], "succs": [355017, 355044], "hash": "1f7561db4b7fbd789274ba25fafc729c"}, "355017": {"disasm": ["lea edx (func - imm)[ebx]", "sub esp imm", "push imm", "push imm", "push imm", "push edx", "push ds:(func - imm)[ebx]", "call eax", "add esp imm"], "preds": [355007], "succs": [355044], "hash": "dd86e67e55f6ff1de959f5ade86f056a"}, "355044": {"disasm": ["sub esp imm", "push func", "call func", "mov [esp+imm] temp", "call func", "add esp imm", "mov eax k", "pop ebx", "pop k", "pop func", "pop temp", "retn"], "preds": [354976, 355007, 355017], "succs": [], "hash": "daf8e88011d3b10c4c046624d4948059"}, "355072": {"disasm": ["mov eax ds:(func - imm)[ebx]", "test eax eax", "jz addr"], "preds": [354732], "succs": [354767, 355086], "hash": "6f6cd214ee0d53657669363d34ddddee"}, "355086": {"disasm": ["sub esp imm", "push imm", "push imm", "push imm", "push [esp+imm]", "push ds:(func - imm)[ebx]", "call eax", "add esp imm", "jmp addr"], "preds": [355072], "succs": [354767], "hash": "22d2bc0bd4b9f8501bd0518ff2c20114"}, "355115": {"disasm": ["mov edx func", "shr edx imm", "add edx 0C8h", "jmp addr"], "preds": [354480], "succs": [354509], "hash": "5155139b618fd1d20d91e14efeb73c2f"}, "355131": {"disasm": ["lea eax (func - imm)[ebx]", "sub esp imm", "push eax", "call func", "add esp imm", "jmp addr"], "preds": [354526], "succs": [354561], "hash": "d1eba75e610dd634383120d06ffaea60"}, "355154": {"disasm": ["mov [esp+imm] func", "jmp addr"], "preds": [354384], "succs": [354526], "hash": "ac0f621696ef60fa948a19d4fa13c490"}, "355163": {"disasm": ["lea func (func - imm)[ebx]", "push esi", "push eax", "lea eax (func - imm)[ebx]", "push 0D4h", "push eax", "call func"], "preds": [354509], "succs": [], "hash": "21eca3a84dc816549e9855e32da9260e"}}, "sign_0": {"355200": {"disasm": ["push ebp", "mov ebp a", "push edi", "push esi", "push ebx", "call func", "add ebx (func func - imm)", "sub esp imm", "mov [esp+imm] func", "mov [esp+imm] func", "push dword ptr [a+imm]", "call func", "mov edi eax", "pop t", "push dword ptr [a+imm]", "call func", "mov [esp+imm] eax", "pop edx", "mov esi [esp+imm]", "push dword ptr [esi]", "call func", "add esp imm", "push imm", "mov esi eax", "push func", "push func", "call func", "mov eax [esp+imm]", "xor edx edx", "mov eax [eax]", "call func", "mov ecx [esp+imm]", "push dword ptr [ecx]", "mov [esp+imm] func", "push func", "mov edx [esp+imm]", "push dword ptr [edx+imm]", "push a", "call func", "add esp imm", "push a", "mov ecx [esp+imm]", "push dword ptr [ecx+imm]", "push t", "call func", "push func", "push t", "push [esp+imm]", "push t", "call func", "add esp imm", "push func", "push [esp+imm]", "mov a [esp+imm]", "push ebp", "call func", "push func", "push ebp", "push t", "push [esp+imm]", "call func", "add esp imm", "push [esp+imm]", "call func", "mov [esp+imm] t", "call func", "mov [esp+imm] ebp", "call func", "mov [esp+imm] func", "call func", "add esp imm", "pop ebx", "pop func", "pop t", "pop ebp", "retn"], "preds": [], "succs": [], "hash": "002d2f17520d709eb35f36349993d720"}}, "decrypt": {"358016": {"disasm": ["push ebp", "push edi", "push esi", "mov esi func", "push ebx", "call func", "add ebx (func func - imm)", "sub esp imm", "mov ebp [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] func", "push dword ptr [ebp+imm]", "call func", "mov edi eax", "pop func", "push [esp+imm]", "call func", "mov [esp+imm] func", "mov [esp+imm] func", "mov func func", "call func", "mov [esp+imm] func", "call func", "mov [esp+imm] esi", "mov func eax", "mov [esp+imm] func", "call func", "pop edx", "push [esp+imm]", "mov func eax", "call func", "add esp imm", "push imm", "push [esp+imm]", "mov [esp+imm] func", "push func", "call func", "push dword ptr [ebp+imm]", "mov edx [esp+imm]", "push dword ptr [edx]", "push [esp+imm]", "push t1", "call func", "add esp imm", "push dword ptr [ebp+imm]", "push [esp+imm]", "push [esp+imm]", "push t2", "call func", "push dword ptr [ebp+imm]", "mov ecx [esp+imm]", "push dword ptr [ecx]", "push t2", "push t2", "call func", "add esp imm", "push dword ptr [ebp+imm]", "push t2", "push t2", "call func", "push dword ptr [ebp+imm]", "push t2", "push t1", "push t1", "call func", "add esp imm", "push [esp+imm]", "call func", "mov [esp+imm] t2", "call func", "push dword ptr [ebp+imm]", "push t1", "push [esp+imm]", "push [esp+imm]", "call func", "add esp imm", "push t1", "call func", "add esp imm", "pop ebx", "pop t2", "pop t1", "pop ebp", "retn"], "preds": [], "succs": [], "hash": "794061e3a61511843f46a25788ccecd3"}}}